{"version":3,"sources":["components/Products/Product/Product.module.css","components/UI/Spinner/Spinner.module.css","components/NavBar/NavBar.module.css","services/form-utils.js","components/UI/TextInput/TextInput.js","components/UI/Select/Select.js","components/UI/TextareaInput/TextareaInput.js","components/UI/ValidationMessages/ValidationMessages.js","axios-instance.js","services/rest-api-service.js","services/rest-api-auth-cookie-based-service.js","hoc/Guard/Guard.js","containers/AddProduct/AddProduct.js","store/Cart/actions.js","components/Checkout/Checkout.js","hoc/Modal/Modal.js","containers/Cart/Cart.js","components/Products/Product/Product.js","components/Products/Products.js","store/Home/home-slice.js","containers/Home/Home.js","components/UI/Spinner/Spinner.js","components/UI/ApiErrorMessage/ApiErrorMessage.js","components/UI/CheckboxInput/CheckboxInput.js","store/Login/login-slice.js","containers/Login/Login.js","components/AddCategory/AddCategory.js","components/Categories/Categories.js","containers/ManageCategories/ManageCategories.js","store/ManageProducts/actions.js","components/EditProduct/EditProduct.js","containers/ManageProducts/ManageProducts.js","components/UI/Paginator/Paginator.js","store/Orders/actions.js","containers/Orders/Orders.js","containers/ProductDetails/ProductDetails.js","components/NavBar/NavBar.js","hoc/Layout/Layout.js","components/AddPromotion/AddPromotion.js","components/Promotions/Promotions.js","containers/ManagePromotions/ManagePromotions.js","containers/Login/ReLogin.js","App.js","services/utils.js","store/Cart/reducers.js","store/ManageProducts/reducers.js","store/Orders/reducers.js","index.js"],"names":["module","exports","onInputChange","event","formModel","persist","i","target","name","value","type","checked","isTouched","parseInput","validateInput","formIsValid","inputIdentifier","isValid","input","parseFun","checkValidity","validators","rules","isInputValid","isRequired","trim","minLength","length","maxLength","isEmail","test","isNumeric","isDecimal","patternMatch","pattern","React","onChangeHandler","className","id","onChange","memo","options","Fragment","map","option","key","props","toRender","element","Object","keys","index","v","message","restApi","axios","create","baseURL","withCredentials","interceptors","response","use","res","err","status","authService","getAccessToken","removeAccessToken","isGetCurrentUserRequest","window","location","href","toast","error","request","responseURL","includes","fetchCategories","get","then","categories","data","forEach","push","fetchPromotions","resp","createCategory","createCategoryCommand","post","createPromotion","createPromotionCommand","productID","product","deleteCategory","categoryID","delete","deletePromotion","promotionID","createProduct","fetchProducts","products","p","category","label","fetchProductsSnapshot","getProduct","updateProduct","put","deleteProduct","loadProductsFormLocalStorage","localStorage","getItem","cart","JSON","parse","productPromises","Promise","all","resolve","removeProductFromLocalStorage","removeItem","setItem","stringify","createOrder","checkoutCommand","order","deleteOrder","orderID","fetchOrders","userID","pageNumber","pageSize","a","offset","limit","orders","authenticate","email","password","_","getAuthenticatedUser","signUp","logout","token","handleTimeout","uid","onAuthStateChanged","successCallback","failureCallBack","user","Guard","WrappedComponent","connect","state","currentUser","login","component","to","title","description","image","price","displaySuccessMessage","handleChange","e","setState","onSubmitForm","preventDefault","service","resetForm","catch","this","role","data-dismiss","aria-label","onClick","aria-hidden","onSubmit","htmlFor","disabled","Component","checkoutSuccess","Checkout","cardNumber","expirationDate","validationNumber","onCheckout","orderCommand","qty","isLoading","displayCheckoutModal","dispatch","Modal","displayModal","closeModalHandler","children","submitHandler","disableActionSection","data-backdrop","tabIndex","aria-labelledby","aria-modal","style","maxWidth","Cart","onUpdateQty","getNbreTotalItems","totPrice","qte","parseInt","reduce","x","y","isNaN","getTotalPrice","sum","parseFloat","promotion","percentageOff","toFixed","remove","onRemoveProductFromCart","onLoadProducts","prevProps","prevState","onResetState","onCloseSuccessMessage","src","maxHeight","alt","textDecoration","isUserAuthenticated","onOpenCheckoutModal","onCloseCheckoutModal","productsWithQty","loadProductsSuccess","loadProductsFail","actions","classes","Product","join","currentDate","Date","isAfter","parseISO","activeFrom","activeTo","promotionIsActive","INITIAL_STATE","loading","homeSlice","createSlice","initialState","reducers","fetchProductsStart","action","fetchProductsSuccess","payload","fetchProductsFail","resetState","Home","useSelector","home","useDispatch","useEffect","Products","spinner","opacity","useState","display","setDisplay","setMessage","code","loginSlice","authenticationStart","authenticationSuccess","authenticationFailure","signupStart","signupSuccess","signupFailure","logoutSuccess","initAutheticatedUser","Login","isSignUp","onSignUp","onLogin","tokenInfo","signup","onClear","AddCategory","onCategoryAdded","setFormModel","setFormIsValid","setDisplaySuccessMessage","resetFormModel","newFormModel","Categories","onCategoryDeleted","dispalyDeleteModal","setDispalyDeleteModal","setCategoryID","scope","cursor","ManageCategories","setCategories","reloadCategories","cat","fetchProductSuccess","getProductSuccess","fetchCategoriesSuccess","EditProduct","onEditProduct","onUpdateProduct","onFetchCategories","console","log","manageProducts","displayEditModal","displayDeleteModalConfirmation","onOpenUpdateProductModal","onCloseUpdateProductModal","onOpenDeleteProductModal","onCloseDeleteProductModal","onDeleteProduct","pagesCount","onPaginate","currentPage","setCurrentPage","nbrPages","onSelectPage","page","pages","pageCounts","fetchOrdersSuccess","fetchOrdersFail","format","creationDate","ProductDetails","isProductInStock","quantity","addToCart","history","match","params","width","NavBar","displaySubMenu","toggleDropDown","onLogout","data-toggle","data-target","aria-controls","aria-expanded","logo","exact","aria-haspopup","Layout","AddPromotion","onPromotionAdded","formattedProducts","Promotions","promotions","onPromotionDeleted","setPromotionID","ManagePromotions","setPromotions","reloadPromotions","ReLogin","warn","App","getLastActiveTime","useIdleTimer","timeout","onIdle","debounce","path","AddProduct","ManageProducts","Orders","updateObject","oldObject","updatedProperties","loadProductsStart","removeProductFromCart","filter","checkoutStart","checkoutFail","openCheckouModal","closeCheckouModal","closeSuccessMessage","updateQty","newState","item","reducer","updateProductSuccess","openUpdateProductModal","closeUpdateProductModal","openDeleteProductModal","closeDeleteProductModal","deleteProductSuccess","fetchOrdersStart","openDeleteOrderModal","closeDeleteOrderModal","deleteOrderSuccess","rootReducer","combineReducers","homeReducer","manageProductsReducers","authenticationReducer","cartReducers","ordersReducers","store","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5eddb6d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Product\":\"Product_Product__2SI0Y\",\"image\":\"Product_image__1Rr1p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Spinner_spinner__LTzVq\",\"loading\":\"Spinner_loading__haEfk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"NavBar_logo__3hXp8\",\"logout\":\"NavBar_logout__1ZR2r\"};","export const onInputChange = (event, formModel) => {\n  event.persist();\n  let i = { ...formModel[event.target.name] };\n  i.value = i.type === \"checkbox\" ? event.target.checked : event.target.value;\n  i.isTouched = true;\n  parseInput(i);\n  validateInput(i);\n  formModel[event.target.name] = i;\n  let formIsValid = true;\n  for (let inputIdentifier in formModel) {\n    formIsValid = formModel[inputIdentifier].isValid && formIsValid;\n  }\n\n  return { formModel: formModel, formIsValid: formIsValid };\n};\n\nexport const parseInput = (input) =>\n  (input.value = input.parseFun ? input.parseFun(input.value) : input.value);\n\nexport const validateInput = (input) => {\n  let isValid = checkValidity(input.value, input.validators);\n  input.isValid = isValid;\n};\n\nconst checkValidity = (value, rules) => {\n  let isInputValid = true;\n  if (!rules) {\n    return true;\n  }\n\n  if (rules.isRequired) {\n    const isValid = value.trim() !== \"\";\n    rules.isRequired.isValid = isValid;\n    isInputValid = isValid && isInputValid;\n  }\n\n  if (rules.minLength) {\n    const isValid = value.length >= rules.minLength.minLength;\n    rules.minLength.isValid = isValid;\n    isInputValid = isValid && isInputValid;\n  }\n\n  if (rules.maxLength) {\n    const isValid = value.length <= rules.maxLength.maxLength;\n    rules.maxLength.isValid = isValid;\n    isInputValid = isValid && isInputValid;\n  }\n\n  if (rules.isEmail) {\n    const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n    const isValid = pattern.test(value);\n    rules.isEmail.isValid = isValid;\n    isInputValid = isValid && isInputValid;\n  }\n\n  if (rules.isNumeric) {\n    const pattern = /^\\d+$/;\n    const isValid = pattern.test(value);\n    rules.isNumeric.isValid = isValid;\n\n    isInputValid = isValid && isInputValid;\n  }\n  if (rules.isDecimal) {\n    const pattern = /^\\d+(\\.\\d+)?$/;\n    const isValid = pattern.test(value);\n    rules.isDecimal.isValid = isValid;\n\n    isInputValid = isValid && isInputValid;\n  }\n  if (rules.patternMatch) {\n    const isValid = rules.patternMatch.pattern.test(value);\n    rules.patternMatch.isValid = isValid;\n\n    isInputValid = isValid && isInputValid;\n  }\n\n  return isInputValid;\n};\n","import * as React from \"react\";\n\nfunction TextInput({ name, type, value, isValid, onChangeHandler, className }) {\n  return (\n    <React.Fragment>\n      <input\n        id={name}\n        name={name}\n        type={type ? type : \"text\"}\n        value={value || \"\"}\n        onChange={onChangeHandler}\n        className={\n          \"form-control\" +\n          (!isValid ? \" error\" : \"\") +\n          (className ? \" \" + className : \"\")\n        }\n      />\n    </React.Fragment>\n  );\n}\n\nexport default React.memo(TextInput);\n","import React from \"react\";\n\nfunction Select({ name, value, isValid, options, onChangeHandler, className }) {\n  return (\n    <React.Fragment>\n      <select\n        id={name}\n        name={name}\n        value={value}\n        onChange={onChangeHandler}\n        className={\n          \"form-control\" +\n          (!isValid ? \" error\" : \"\") +\n          (className ? \" \" + className : \"\")\n        }\n      >\n        {options &&\n          options.map((option) => (\n            <option key={option.value} value={option.value}>\n              {option.name}\n            </option>\n          ))}\n      </select>\n    </React.Fragment>\n  );\n}\n\nexport default React.memo(Select);\n","import React from \"react\";\n\nfunction TextareaInput({ name, value, isValid, onChangeHandler }) {\n  return (\n    <React.Fragment>\n      <textarea\n        id={name}\n        name={name}\n        value={value || \"\"}\n        onChange={onChangeHandler}\n        className={\"form-control\" + (!isValid ? \" error\" : \"\")}\n      ></textarea>\n    </React.Fragment>\n  );\n}\n\nexport default React.memo(TextareaInput);\n","import React from \"react\";\n\nconst ValidationMessages = (props) => {\n  let toRender = null;\n  if (props.element.isTouched && props.element.validators) {\n    toRender = Object.keys(props.element.validators).map((key, index) => {\n      let v = props.element.validators[key];\n      if (!v.isValid) {\n        return (\n          <small key={index} className=\"error form-text\">\n            {v.message}\n          </small>\n        );\n      }\n\n      return null;\n    });\n  }\n\n  return <React.Fragment>{toRender}</React.Fragment>;\n};\n\nexport default React.memo(ValidationMessages);\n","import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { authService } from \"./services\";\n\nconst instance = axios.create({\n  baseURL: \"https://ecommerce-41f9c.firebaseio.com/\",\n});\n\nexport const restApi = axios.create({\n  baseURL: \"http://localhost/api/\",\n  withCredentials: false,\n});\n\n// restApi.interceptors.request.use((req) => {\n//   if (authService.getAccessToken()) {\n//     req.headers.authorization = \"Bearer \" + authService.getAccessToken();\n//   }\n\n//   return req;\n// });\n\nrestApi.interceptors.response.use(\n  (res) => res,\n  (err) => {\n    let message = \"An error occured, response status: \";\n    if (err.response) {\n      switch (err.response.status) {\n        case 401:\n          if (authService.getAccessToken()) {\n            authService.removeAccessToken();\n          }\n          if (!isGetCurrentUserRequest(err)) {\n            window.location.href = \"/login\";\n          }\n          break;\n\n        default:\n          message += err.response.status;\n          break;\n      }\n    }\n\n    if (!isGetCurrentUserRequest(err)) {\n      toast.error(message);\n    }\n\n    throw err;\n  }\n);\n\nconst isGetCurrentUserRequest = (error) => {\n  return error?.request?.responseURL?.includes(\"/api/users/current\");\n};\n\nexport default instance;\n","import { restApi } from \"../axios-instance\";\n\nexport const fetchCategories = () => {\n  return restApi.get(\"/categories\").then((response) => {\n    const categories = [];\n    Object.keys(response.data).forEach((key) => {\n      categories.push({\n        value: key,\n        name: response.data[key],\n      });\n    });\n\n    return categories;\n  });\n};\n\nexport const fetchPromotions = () => {\n  return restApi.get(\"/promotions\").then((resp) => resp.data);\n};\n\nexport const createCategory = (createCategoryCommand) => {\n  return restApi.post(\"/categories\", createCategoryCommand);\n};\n\nexport const createPromotion = (createPromotionCommand) => {\n  createPromotionCommand.productID = createPromotionCommand.product;\n  return restApi.post(\"/promotions\", createPromotionCommand);\n};\n\nexport const deleteCategory = (categoryID) => {\n  return restApi.delete(`/categories/${categoryID}`);\n};\n\nexport const deletePromotion = (promotionID) => {\n  return restApi.delete(`/promotions/${promotionID}`);\n};\n\nexport const createProduct = (product) => {\n  return restApi.post(\"/products\", product);\n};\n\nexport const fetchProducts = () => {\n  return restApi\n    .get(\"/products\")\n    .then((response) => response.data)\n    .then((products) =>\n      products.map((p) => {\n        p.category = p.category.label;\n        return p;\n      })\n    );\n};\n\nexport const fetchProductsSnapshot = () => {\n  return restApi\n    .get(\"/products/snapshot\")\n    .then((response) => response.data)\n    .then((products) =>\n      products.map((p) => {\n        p.category = p.category.label;\n        return p;\n      })\n    );\n};\n\nexport const getProduct = (productID) => {\n  return restApi\n    .get(`/products/${productID}`)\n    .then((response) => response.data)\n    .then((p) => {\n      p.category = p.category.id;\n      return p;\n    });\n};\n\nexport const updateProduct = (product) => {\n  return restApi.put(\"/products\", product);\n};\n\nexport const deleteProduct = (productID) => {\n  return restApi.delete(`/products/${productID}`);\n};\n\nexport const loadProductsFormLocalStorage = () => {\n  if (localStorage.getItem(\"CART\")) {\n    let cart = JSON.parse(localStorage.getItem(\"CART\"));\n\n    let productPromises = Object.keys(cart).map((productID) =>\n      getProduct(productID)\n    );\n    return Promise.all(productPromises);\n  } else {\n    return Promise.resolve([]);\n  }\n};\n\nexport const removeProductFromLocalStorage = (productID) => {\n  let cart = JSON.parse(localStorage.getItem(\"CART\"));\n  delete cart[productID];\n  if (Object.keys(cart).length === 0) {\n    localStorage.removeItem(\"CART\");\n  } else {\n    localStorage.setItem(\"CART\", JSON.stringify({ ...cart }));\n  }\n};\n\nexport const createOrder = (checkoutCommand) => {\n  let order = { ...checkoutCommand };\n  return restApi.post(\"/orders\", order).then((response) => response.data);\n};\n\nexport const deleteOrder = (orderID) => {\n  return restApi.delete(`/orders/${orderID}`);\n};\n\nexport const fetchOrders = async (userID, pageNumber, pageSize) => {\n  let orders = await restApi\n    .post(`/orders/search`, { userID, offset: pageNumber - 1, limit: pageSize })\n    .then((resp) => resp.data);\n\n  // for (let order of orders.y) {\n  //   let products = [];\n  //   for (let p of order.products) {\n  //     await getProduct(p.productID).then((product) => {\n  //       products.push({ ...p, ...product });\n  //     });\n  //   }\n\n  //   order.products = products;\n  // }\n  return orders;\n};\n","import { restApi } from \"../axios-instance\";\n\nexport const authenticate = (email, password) => {\n  return restApi\n    .post(\"/users/authenticate\", { email, password })\n    .then((_) => getAuthenticatedUser());\n};\n\nexport const signUp = (email, password) => {\n  return restApi.post(\"/users\", { email, password });\n};\n\nexport const logout = () => {\n  return restApi.post(\"/gateway/revoke-token\", { token: \"dummy\" });\n};\n\nexport const handleTimeout = () => {\n  logout().then((_) => {\n    window.location.href = \"/re-login\";\n  });\n};\n\n// export const isUserAuthenticated = () => {\n//   let accessToken = localStorage.getItem(ACCESS_TOKEN);\n//   if (!accessToken || isTokenExpired(accessToken)) {\n//     return false;\n//   }\n//   return true;\n// };\n\nconst getAuthenticatedUser = () => {\n  return restApi.get(`/users/current`).then((resp) => {\n    return { email: resp.data.email, uid: resp.data.id };\n  });\n};\n\nexport const removeAccessToken = () => {\n  // Not implemented\n};\n\nexport const getAccessToken = () => {\n  return null;\n};\n\nexport const onAuthStateChanged = (successCallback, failureCallBack) => {\n  getAuthenticatedUser().then(\n    (user) => {\n      successCallback(user);\n    },\n    (error) => {\n      failureCallBack(error);\n    }\n  );\n};\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nconst Guard = (WrappedComponent) => {\n  const fun = (props) => {\n    if (props.currentUser === null) {\n      return null;\n    }\n\n    let component = <WrappedComponent />;\n    if (props.currentUser === \"anonymous\") {\n      component = <Redirect to=\"/login\"></Redirect>;\n    }\n\n    return component;\n  };\n\n  const mapStateToProps = (state) => {\n    return {\n      currentUser: state.login.user,\n    };\n  };\n\n  return connect(mapStateToProps)(fun);\n};\n\nexport default Guard;\n","import React, { Component } from \"react\";\nimport { onInputChange } from \"../../services/form-utils\";\n\nimport TextInput from \"../../components/UI/TextInput/TextInput\";\nimport Select from \"../../components/UI/Select/Select\";\nimport TextareaInput from \"../../components/UI/TextareaInput/TextareaInput\";\nimport ValidationMessages from \"../../components/UI/ValidationMessages/ValidationMessages\";\n\nimport { service } from \"../../services\";\nimport Guard from \"../../hoc/Guard/Guard\";\n\nclass AddProduct extends Component {\n  state = {\n    formModel: {\n      title: {\n        isValid: false,\n        isTouched: false,\n        value: \"\",\n        validators: {\n          isRequired: { isValid: false, message: \"Title is required\" },\n        },\n      },\n      category: {\n        isValid: false,\n        isTouched: false,\n        value: \"\",\n        options: [{ value: \"\", name: \"None\" }],\n        validators: {\n          isRequired: { isValid: false, message: \"Category is required\" },\n        },\n      },\n      description: {\n        isValid: false,\n        isTouched: false,\n        value: \"\",\n        validators: {\n          isRequired: { isValid: false, message: \"Description is Required\" },\n          minLength: {\n            minLength: 5,\n            isValid: false,\n            message: \"Description at least 5 char\",\n          },\n          maxLength: {\n            maxLength: 100,\n            isValid: false,\n            message: \"Description max 100 char\",\n          },\n        },\n      },\n      image: {\n        isValid: true,\n        isTouched: false,\n        value: \"\",\n      },\n      price: {\n        isValid: false,\n        isTouched: false,\n        value: \"\",\n        validators: {\n          isRequired: { isValid: false, message: \"Price is Required\" },\n          isDecimal: { isValid: false, message: \"Price must be decimal\" },\n        },\n      },\n    },\n    formIsValid: false,\n    displaySuccessMessage: false,\n  };\n\n  componentDidMount() {\n    service\n      .fetchCategories()\n      .then((categories) => {\n        let formModel = { ...this.state.formModel };\n        formModel.category.options = [\n          ...formModel.category.options,\n          ...categories,\n        ];\n\n        this.setState({ formModel: formModel });\n      })\n      .catch((error) => {\n        this.setState({ error: true });\n      });\n  }\n\n  handleChange = (e) => {\n    let { formModel, formIsValid } = onInputChange(e, {\n      ...this.state.formModel,\n    });\n    this.setState({ formModel, formIsValid });\n  };\n\n  onSubmitForm = (e) => {\n    e.preventDefault();\n    const product = {};\n    for (let element in this.state.formModel) {\n      product[element] = this.state.formModel[element].value;\n    }\n\n    service.createProduct(product).then((response) => {\n      if (response.status === 201 || response.status === 200) {\n        this.setState({ displaySuccessMessage: true, formIsValid: false });\n        this.resetForm();\n      }\n    });\n  };\n\n  resetForm = () => {\n    let formModel = { ...this.state.formModel };\n    Object.keys(formModel).forEach((key) => {\n      formModel[key].value = \"\";\n    });\n    this.setState({ formModel: formModel });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.displaySuccessMessage ? (\n          <div\n            className=\"container alert alert-success alert-dismissible fade show w-50\"\n            role=\"alert\"\n          >\n            Product has been created successfully\n            <button\n              type=\"button\"\n              className=\"close\"\n              data-dismiss=\"alert\"\n              aria-label=\"Close\"\n              onClick={() => this.setState({ displaySuccessMessage: false })}\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n        ) : null}\n\n        <form onSubmit={this.onSubmitForm} className=\"container w-50\">\n          <div className=\"form-group\">\n            <label htmlFor=\"title\">Title</label>\n            <TextInput\n              name=\"title\"\n              value={this.state.formModel.title.value}\n              onChangeHandler={this.handleChange}\n              isValid={\n                !this.state.formModel.title.isTouched ||\n                this.state.formModel.title.validators.isRequired.isValid\n              }\n            ></TextInput>\n            <ValidationMessages element={this.state.formModel.title} />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"description\">Description</label>\n            <TextareaInput\n              name=\"description\"\n              value={this.state.formModel.description.value}\n              onChangeHandler={this.handleChange}\n              isValid={\n                !this.state.formModel.description.isTouched ||\n                (this.state.formModel.description.validators.isRequired\n                  .isValid &&\n                  this.state.formModel.description.validators.minLength\n                    .isValid &&\n                  this.state.formModel.description.validators.maxLength.isValid)\n              }\n            ></TextareaInput>\n            <ValidationMessages element={this.state.formModel.description} />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"category\">Category</label>\n            <Select\n              name=\"category\"\n              value={this.state.formModel.category.value}\n              options={this.state.formModel.category.options}\n              onChangeHandler={this.handleChange}\n              className=\"col-5\"\n              isValid={\n                !this.state.formModel.category.isTouched ||\n                this.state.formModel.category.validators.isRequired.isValid\n              }\n            ></Select>\n            <ValidationMessages element={this.state.formModel.category} />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"image\">Image</label>\n            <TextInput\n              name=\"image\"\n              className=\"col-5\"\n              value={this.state.formModel.image.value}\n              isValid=\"true\"\n              onChangeHandler={this.handleChange}\n            ></TextInput>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"price\">Price</label>\n            <TextInput\n              name=\"price\"\n              value={this.state.formModel.price.value}\n              onChangeHandler={this.handleChange}\n              className=\"col-2\"\n              isValid={\n                !this.state.formModel.price.isTouched ||\n                (this.state.formModel.price.validators.isRequired.isValid &&\n                  this.state.formModel.price.validators.isDecimal.isValid)\n              }\n            ></TextInput>\n            <ValidationMessages element={this.state.formModel.price} />\n          </div>\n\n          <button\n            type=\"submit\"\n            className={\n              \"btn \" +\n              (this.state.formIsValid ? \"btn-primary\" : \"btn-secondary\")\n            }\n            disabled={!this.state.formIsValid}\n          >\n            Submit\n          </button>\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Guard(AddProduct);\n","import { service } from \"../../services\";\n\nexport const LOAD_PRODUCTS_START = \"LOAD_PRODUCTS_START\";\nexport const LOAD_PRODUCTS_SUCCESS = \"LOAD_PRODUCTS_SUCCESS\";\nexport const LOAD_PRODUCTS_FAIL = \"LOAD_PRODUCTS_FAIL\";\nexport const RESET_CART_STATE = \"RESET_CART_STATE\";\nexport const REMOVE_PRODUCT_FROM_CART = \"REMOVE_PRODUCT_FROM_CART\";\n\nexport const CHECKOUT_START = \"CHECKOUT_START\";\nexport const CHECKOUT_SUCCESS = \"CHECKOUT_SUCCESS\";\nexport const CHECKOUT_FAIL = \"CHECKOUT_FAIL\";\n\nexport const OPEN_CHECKOUT_MODAL = \"OPEN_CHECKOUT_MODAL\";\nexport const CLOSE_CHECKOUT_MODAL = \"CLOSE_CHECKOUT_MODAL\";\n\nexport const CLOSE_SUCCESS_MESSAGE = \"CLOSE_SUCCESS_MESSAGE\";\n\nexport const UPDTATE_QTY = \"UPDTATE_QTY\";\n\nconst loadProductsStart = () => {\n  return {\n    type: LOAD_PRODUCTS_START,\n  };\n};\n\nconst loadProductsSuccess = (products) => {\n  return {\n    type: LOAD_PRODUCTS_SUCCESS,\n    products: products,\n  };\n};\n\nexport const loadProductsFail = (error) => {\n  return {\n    type: LOAD_PRODUCTS_FAIL,\n    error: error,\n  };\n};\n\nexport const loadProducts = () => {\n  return (dispatch) => {\n    dispatch(loadProductsStart());\n    service\n      .loadProductsFormLocalStorage()\n      .then((products) => {\n        let cart = JSON.parse(localStorage.getItem(\"CART\"));\n        let productsWithQty = products.map((product) => {\n          let productWithQty = {\n            ...product,\n            qty: cart[product.id],\n          };\n\n          return productWithQty;\n        });\n\n        dispatch(loadProductsSuccess(productsWithQty));\n      })\n      .catch((error) => {\n        dispatch(loadProductsFail(error));\n      });\n  };\n};\n\nexport const removeProductFromCart = (productID) => {\n  service.removeProductFromLocalStorage(productID);\n  return {\n    type: REMOVE_PRODUCT_FROM_CART,\n    productID: productID,\n  };\n};\n\nconst checkoutStart = () => {\n  return {\n    type: CHECKOUT_START,\n  };\n};\n\nconst checkoutSuccess = (order) => {\n  localStorage.removeItem(\"CART\");\n  return {\n    type: CHECKOUT_SUCCESS,\n    order: order,\n  };\n};\n\nexport const openCheckouModal = () => {\n  return {\n    type: OPEN_CHECKOUT_MODAL,\n  };\n};\n\nexport const closeCheckouModal = () => {\n  return {\n    type: CLOSE_CHECKOUT_MODAL,\n  };\n};\n\nexport const resetState = () => {\n  return {\n    type: RESET_CART_STATE,\n  };\n};\n\nexport const checkout = (checkoutCommand) => {\n  return async (dispatch) => {\n    dispatch(checkoutStart());\n    let order = await service.createOrder(checkoutCommand);\n    dispatch(checkoutSuccess(order));\n  };\n};\n\nexport const closeSuccessMessage = () => {\n  return { type: CLOSE_SUCCESS_MESSAGE };\n};\n\nexport const updateQty = (productID, qty) => {\n  return { type: UPDTATE_QTY, productID: productID, qty: qty };\n};\n","import React, { Component } from \"react\";\nimport ValidationMessages from \"../UI/ValidationMessages/ValidationMessages\";\nimport TextInput from \"../UI/TextInput/TextInput\";\nimport { onInputChange } from \"../../services/form-utils\";\nimport * as actions from \"../../store/Cart/actions\";\nimport { connect } from \"react-redux\";\nimport { format } from \"date-fns\";\n\nclass Checkout extends Component {\n  state = {\n    formModel: {\n      cardNumber: {\n        isValid: false,\n        isTouched: false,\n        value: \"\",\n        validators: {\n          isRequired: { isValid: false, message: \"PAN is required\" },\n          isNumeric: { isValid: false, message: \"PAN must be numeric\" },\n          minLength: {\n            isValid: false,\n            minLength: 16,\n            message: \"Validation number is of length 16\",\n          },\n          maxLength: {\n            isValid: false,\n            maxLength: 16,\n            message: \"Validation number is of length 16\",\n          },\n        },\n      },\n      expirationDate: {\n        isValid: false,\n        isTouched: false,\n        value: \"\",\n        validators: {\n          isRequired: {\n            isValid: false,\n            message: \"expiration date is required\",\n          },\n          patternMatch: {\n            pattern: /^((0?[1-9]|1[012])[/]?[0-9]{2})*$/,\n            isValid: false,\n            message: \"expiration date must respect format MM/yy\",\n          },\n        },\n      },\n      validationNumber: {\n        isValid: false,\n        isTouched: false,\n        value: \"\",\n        validators: {\n          isRequired: {\n            isValid: false,\n            message: \"Validation number is required\",\n          },\n          isNumeric: {\n            isValid: false,\n            message: \"Validation number must be numeric\",\n          },\n          minLength: {\n            minLength: 3,\n            isValid: false,\n            message: \"Validation number must be of length 3\",\n          },\n          maxLength: {\n            maxLength: 3,\n            isValid: false,\n            message: \"Validation number must be of length 3\",\n          },\n        },\n      },\n    },\n  };\n\n  handleChange = (e) => {\n    let { formModel, formIsValid } = onInputChange(e, {\n      ...this.state.formModel,\n    });\n    this.setState({ formModel, formIsValid });\n  };\n\n  onCheckout = (e) => {\n    e.preventDefault();\n    const orderCommand = {};\n    for (let element in this.state.formModel) {\n      orderCommand[element] = this.state.formModel[element].value;\n    }\n\n    let products = this.props.products.map((p) => {\n      return { productID: p.id, qty: p.qty };\n    });\n    orderCommand.products = products;\n    orderCommand.userID = this.props.user.uid;\n\n    this.props.onCheckout(orderCommand);\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <form className=\"container\">\n          <div className=\"form-group\">\n            <label htmlFor=\"cardNumber\">Card number</label>\n            <TextInput\n              name=\"cardNumber\"\n              value={this.state.formModel.cardNumber.value}\n              onChangeHandler={this.handleChange}\n              isValid={\n                !this.state.formModel.cardNumber.isTouched ||\n                (this.state.formModel.cardNumber.validators.isRequired\n                  .isValid &&\n                  this.state.formModel.cardNumber.validators.isNumeric\n                    .isValid &&\n                  this.state.formModel.cardNumber.validators.minLength\n                    .isValid &&\n                  this.state.formModel.cardNumber.validators.maxLength.isValid)\n              }\n            ></TextInput>\n            <ValidationMessages element={this.state.formModel.cardNumber} />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"expirationDate\">Expiration Date</label>\n            <TextInput\n              name=\"expirationDate\"\n              value={this.state.formModel.expirationDate.value}\n              onChangeHandler={this.handleChange}\n              isValid={\n                !this.state.formModel.expirationDate.isTouched ||\n                (this.state.formModel.expirationDate.validators.isRequired\n                  .isValid &&\n                  this.state.formModel.expirationDate.validators.patternMatch\n                    .isValid)\n              }\n            ></TextInput>\n            <ValidationMessages element={this.state.formModel.expirationDate} />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"validationNumber\">Validation Number</label>\n            <TextInput\n              name=\"validationNumber\"\n              value={this.state.formModel.validationNumber.value}\n              onChangeHandler={this.handleChange}\n              isValid={\n                !this.state.formModel.validationNumber.isTouched ||\n                (this.state.formModel.validationNumber.validators.isRequired\n                  .isValid &&\n                  this.state.formModel.validationNumber.validators.isNumeric\n                    .isValid &&\n                  this.state.formModel.validationNumber.validators.minLength\n                    .isValid &&\n                  this.state.formModel.validationNumber.validators.maxLength\n                    .isValid)\n              }\n            ></TextInput>\n            <ValidationMessages\n              element={this.state.formModel.validationNumber}\n            />\n          </div>\n\n          <button\n            type=\"submit\"\n            className={\n              \"btn f-right \" +\n              (this.state.formIsValid ? \"btn-primary\" : \"btn-secondary\")\n            }\n            disabled={!this.state.formIsValid}\n            onClick={this.onCheckout}\n          >\n            Submit\n          </button>\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    products: state.cart.products,\n    isLoading: state.cart.isLoading,\n    displayCheckoutModal: state.cart.displayCheckoutModal,\n    displaySuccessMessage: state.cart.displaySuccessMessage,\n    user: state.login.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onCheckout: (orderCommand) => dispatch(actions.checkout(orderCommand)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Checkout);\n","import React from \"react\";\n\nexport default function Modal({\n  displayModal,\n  title,\n  className,\n  closeModalHandler,\n  children,\n  submitHandler,\n  disableActionSection,\n}) {\n  return (\n    <React.Fragment>\n      <div\n        className={\"modal fade\" + (displayModal ? \" show d-block\" : \" d-none\")}\n        data-backdrop=\"static\"\n        tabIndex=\"-1\"\n        role=\"dialog\"\n        aria-labelledby=\"staticBackdropLabel\"\n        aria-hidden={!displayModal}\n        aria-modal={displayModal}\n      >\n        <div\n          className={\"modal-dialog \" + (className ? className : \"\")}\n          style={{ maxWidth: \"none\" }}\n          role=\"document\"\n        >\n          <div className=\"modal-content\">\n            {title ? (\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\" id=\"staticBackdropLabel\">\n                  {title}\n                </h5>\n                <button\n                  type=\"button\"\n                  className=\"close\"\n                  data-dismiss=\"modal\"\n                  aria-label=\"Close\"\n                  onClick={closeModalHandler}\n                >\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n            ) : null}\n\n            <div className=\"modal-body\">{children}</div>\n\n            {disableActionSection ? null : (\n              <div className=\"modal-footer\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-dismiss=\"modal\"\n                  onClick={closeModalHandler}\n                >\n                  Close\n                </button>\n                <button\n                  onClick={submitHandler}\n                  type=\"button\"\n                  className=\"btn btn-primary\"\n                >\n                  Submit\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n      <div\n        className={\n          \"modal-backdrop fade\" + (displayModal ? \" show d-block\" : \" d-none\")\n        }\n      ></div>\n    </React.Fragment>\n  );\n}\n","import React, { Component } from \"react\";\nimport * as actions from \"../../store/Cart/actions\";\n\nimport { onInputChange } from \"../../services/form-utils\";\nimport { connect } from \"react-redux\";\n\nimport TextInput from \"../../components/UI/TextInput/TextInput\";\nimport Checkout from \"../../components/Checkout/Checkout\";\nimport Modal from \"../../hoc/Modal/Modal\";\nimport ValidationMessages from \"../../components/UI/ValidationMessages/ValidationMessages\";\n\nclass Cart extends Component {\n  state = {\n    formModel: null,\n    formIsValid: true,\n  };\n\n  componentDidMount() {\n    this.props.onLoadProducts();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.products !== prevProps.products) {\n      if (this.props.products.length > 0) {\n        let formModel = {\n          ...this.state.formModel,\n        };\n\n        this.props.products.forEach((product) => {\n          formModel[\"quantity\" + product.id] = {\n            isValid: true,\n            isTouched: false,\n            value: product.qty,\n            productID: product.id,\n            validators: {\n              isRequired: { isValid: false, message: \"QTY is required\" },\n              isNumeric: { isValid: false, message: \"QTY must be numeric\" },\n            },\n          };\n        });\n\n        this.setState({\n          formModel: formModel,\n        });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.onResetState();\n  }\n\n  handleChange = (e) => {\n    let { formModel, formIsValid } = onInputChange(e, {\n      ...this.state.formModel,\n    });\n    this.setState({ formModel, formIsValid }, () => {\n      if (this.state.formModel[e.target.name].isValid) {\n        this.props.onUpdateQty(\n          this.state.formModel[e.target.name].productID,\n          this.state.formModel[e.target.name].value\n        );\n      }\n    });\n  };\n\n  getNbreTotalItems = () => {\n    if (this.state.formModel) {\n      let totPrice = Object.keys(this.state.formModel)\n        .map((qte) => parseInt(this.state.formModel[qte].value))\n        .reduce((x, y) => x + y, 0);\n\n      return isNaN(totPrice) ? 0 : totPrice;\n    }\n\n    return 0;\n  };\n\n  getTotalPrice = () => {\n    let sum = this.props.products\n      .map(\n        (p) =>\n          parseFloat(\n            p.promotion\n              ? p.price * (1 - p.promotion.percentageOff / 100)\n              : p.price\n          ) * parseInt(this.state.formModel[\"quantity\" + p.id].value)\n      )\n      .reduce((x, y) => x + y, 0)\n      .toFixed(2);\n\n    return isNaN(sum) ? 0 : sum;\n  };\n\n  remove = (product) => {\n    this.props.onRemoveProductFromCart(product.id);\n\n    let formModel = { ...this.state.formModel };\n    delete formModel[\"quantity\" + product.id];\n    this.setState({ formModel: formModel });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.props.displaySuccessMessage ? (\n          <div\n            className=\"container alert alert-success alert-dismissible fade show w-50\"\n            role=\"alert\"\n          >\n            Checkout OK\n            <button\n              type=\"button\"\n              className=\"close\"\n              data-dismiss=\"alert\"\n              aria-label=\"Close\"\n              onClick={this.props.onCloseSuccessMessage}\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n        ) : null}\n        {this.props.products.length > 0 && this.state.formModel ? (\n          <div className=\"card w-75 mx-auto\">\n            <div className=\"card-header\">Shoping cart</div>\n            <ul className=\"list-group list-group-flush\">\n              {this.props.products.map((product) => (\n                <li key={product.id} className=\"list-group-item\">\n                  <div className=\"row\">\n                    <div className=\"col-4\">\n                      <img\n                        src={\"/assets/images/products/\" + product.image}\n                        className={\"card-img-top p-2 rounded \"}\n                        style={{ maxHeight: \"200px\" }}\n                        alt={product.title}\n                      />\n                    </div>\n                    <div className=\"col-5\">\n                      <div>\n                        <label>Name: </label> {product.title}\n                      </div>\n                      <div>\n                        <label>ISBN: </label> {product.id}\n                      </div>\n                      <div>\n                        <label>Price: </label>\n                        {!product.promotion ? (\n                          <span> {product.price} $</span>\n                        ) : (\n                          <React.Fragment>\n                            <span\n                              className=\"mx-2\"\n                              style={{ textDecoration: \"line-through\" }}\n                            >\n                              {product.price}\n                            </span>\n                            <span>\n                              {product.price *\n                                (1 -\n                                  product.promotion.percentageOff / 100)}{\" \"}\n                              $\n                            </span>\n                          </React.Fragment>\n                        )}\n                      </div>\n                    </div>\n                    <div className=\"col-3\">\n                      <div>\n                        <label>Qty: </label>\n                        <TextInput\n                          name={\"quantity\" + product.id}\n                          className=\"col-3 ml-2 d-inline\"\n                          value={\n                            this.state.formModel[\"quantity\" + product.id].value\n                          }\n                          onChangeHandler={this.handleChange}\n                          isValid={\n                            !this.state.formModel[\"quantity\" + product.id]\n                              .isTouched ||\n                            this.state.formModel[\"quantity\" + product.id]\n                              .validators.isRequired.isValid\n                          }\n                        ></TextInput>\n                        <ValidationMessages\n                          element={\n                            this.state.formModel[\"quantity\" + product.id]\n                          }\n                        />\n\n                        <button\n                          className=\"btn btn-primary ml-2\"\n                          onClick={() => this.remove(product)}\n                        >\n                          Remove\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </li>\n              ))}\n            </ul>\n            <div className=\"card-footer\">\n              <div>Nbr Items : {this.getNbreTotalItems()}</div>\n              <div>Total price : {this.getTotalPrice()}</div>\n\n              {this.props.isUserAuthenticated ? (\n                <button\n                  className={\n                    \"btn float-right \" +\n                    (this.state.formIsValid && this.getNbreTotalItems() > 0\n                      ? \"btn-primary\"\n                      : \"btn-secondary\")\n                  }\n                  disabled={\n                    !this.state.formIsValid || this.getNbreTotalItems() === 0\n                  }\n                  onClick={this.props.onOpenCheckoutModal}\n                >\n                  Checkout\n                </button>\n              ) : null}\n            </div>\n          </div>\n        ) : !this.props.isLoading ? (\n          <div\n            className=\"container alert alert-warning alert-dismissible fade show w-50\"\n            role=\"alert\"\n          >\n            No product on cart\n          </div>\n        ) : null}\n        {this.props.displayCheckoutModal ? (\n          <Modal\n            displayModal={this.props.displayCheckoutModal}\n            closeModalHandler={this.props.onCloseCheckoutModal}\n            className=\"w-50\"\n            disableActionSection\n            title=\" \"\n          >\n            <Checkout />\n          </Modal>\n        ) : null}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    products: state.cart.products,\n    isLoading: state.cart.isLoading,\n    displayCheckoutModal: state.cart.displayCheckoutModal,\n    displaySuccessMessage: state.cart.displaySuccessMessage,\n    isUserAuthenticated: state.login.user && state.login.user !== \"anonymous\",\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onLoadProducts: () => dispatch(actions.loadProducts()),\n    onRemoveProductFromCart: (productID) =>\n      dispatch(actions.removeProductFromCart(productID)),\n    onOpenCheckoutModal: () => dispatch(actions.openCheckouModal()),\n    onCloseCheckoutModal: () => dispatch(actions.closeCheckouModal()),\n    onResetState: () => dispatch(actions.resetState()),\n    onCloseSuccessMessage: () => dispatch(actions.closeSuccessMessage()),\n    onUpdateQty: (productID, qty) =>\n      dispatch(actions.updateQty(productID, qty)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport classes from \"./Product.module.css\";\nimport { isAfter, parseISO } from \"date-fns\";\n\nconst product = ({ product }) => {\n  const promotionIsActive = (promotion) => {\n    const currentDate = new Date();\n    return (\n      isAfter(currentDate, parseISO(promotion.activeFrom)) &&\n      isAfter(parseISO(promotion.activeTo), currentDate)\n    );\n  };\n\n  return (\n    <NavLink to={\"product/\" + product.productID}>\n      <div className={[classes.Product, \"card\"].join(\" \")}>\n        <img\n          src={\"/assets/images/products/\" + product.image}\n          className={\"card-img-top p-2 rounded \" + classes.image}\n          alt=\"\"\n        />\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{product.name}</h5>\n          <p className=\"card-text\">{product.description}</p>\n        </div>\n        <div className=\"card-footer bg-transparent\">\n          {product.promotion && promotionIsActive(product.promotion) ? (\n            <React.Fragment>\n              <span className=\"mr-2\" style={{ textDecoration: \"line-through\" }}>\n                {product.price}\n              </span>\n              <span>\n                {product.price * (1 - product.promotion.percentageOff / 100)} $\n              </span>\n            </React.Fragment>\n          ) : (\n            <span>{product.price} $ </span>\n          )}\n        </div>\n      </div>\n    </NavLink>\n  );\n};\n\nexport default product;\n","import React from \"react\";\nimport Product from \"./Product/Product\";\n\nconst products = (props) => {\n  const products = props.products.map((product) => (\n    <div key={product.id} className=\"col text-center mb-5\">\n      <Product product={product}></Product>\n    </div>\n  ));\n\n  return (\n    <React.Fragment>\n      <div className=\"row\">{products}</div>\n    </React.Fragment>\n  );\n};\n\nexport default products;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { service } from \"../../services\";\n\nconst INITIAL_STATE = {\n  products: [],\n  loading: false,\n};\n\nconst homeSlice = createSlice({\n  name: \"home\",\n  initialState: INITIAL_STATE,\n  reducers: {\n    fetchProductsStart: (state, action) => {\n      state.loading = true;\n    },\n    fetchProductsSuccess: (state, action) => {\n      state.loading = false;\n      state.products = action.payload.products;\n    },\n    fetchProductsFail: (state, action) => {\n      state.loading = false;\n    },\n    resetState: (state) => INITIAL_STATE,\n  },\n});\n\nexport const fecthProducts = () => {\n  return (dispatch) => {\n    dispatch(homeSlice.actions.fetchProductsStart());\n    service\n      .fetchProductsSnapshot()\n      .then((products) => {\n        dispatch(\n          homeSlice.actions.fetchProductsSuccess({ products: products })\n        );\n      })\n      .catch((error) => {\n        dispatch(homeSlice.actions.fetchProductsFail({ error: error }));\n      });\n  };\n};\n\nexport default homeSlice.reducer;\nexport const { resetState } = homeSlice.actions;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Products from \"../../components/Products/Products\";\nimport { fecthProducts, resetState } from \"../../store/Home/home-slice\";\n\nconst Home = () => {\n  const products = useSelector((state) => state.home.products);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fecthProducts());\n\n    return () => dispatch(resetState());\n  }, [dispatch]);\n\n  return (\n    <div className=\"container\">\n      <h4 className=\"mb-5\">Products</h4>\n\n      {products && <Products products={products}></Products>}\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport classes from \"./Spinner.module.css\";\n\nconst Spinner = ({ loading, className }) => {\n  return (\n    <React.Fragment>\n      {loading ? (\n        <div className={classes.spinner + (className ? className : \"\")}>\n          <div className={classes.loading}>\n            <div className=\"spinner-border text-primary\" role=\"status\">\n              <span className=\"sr-only\">Loading...</span>\n            </div>\n          </div>\n          <div\n            style={{ opacity: 0.25 }}\n            className=\"modal-backdrop show d-block position-absolute w-100 h-100\"\n          ></div>\n        </div>\n      ) : null}\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(Spinner);\n","import React, { useEffect, useState } from \"react\";\n\nconst ApiErrorMessage = ({ error }) => {\n  const [display, setDisplay] = useState(true);\n  const [message, setMessage] = useState();\n\n  useEffect(() => {\n    if (error) {\n      switch (error.code) {\n        case \"auth/user-not-found\":\n        case \"auth/wrong-password\":\n          setMessage(\"Login/Password incorrect\");\n          break;\n\n        case \"auth/email-already-in-use\":\n          setMessage(error.message);\n          break;\n        default:\n          setMessage(error.message);\n      }\n    }\n  }, [error]);\n\n  const dismiss = () => {\n    setDisplay(false);\n  };\n\n  return (\n    <React.Fragment>\n      {message && display ? (\n        <div\n          className=\"container alert alert-danger alert-dismissible fade show\"\n          role=\"alert\"\n        >\n          {message}\n          <button\n            type=\"button\"\n            className=\"close\"\n            data-dismiss=\"alert\"\n            aria-label=\"Close\"\n            onClick={dismiss}\n          >\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n      ) : null}\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(ApiErrorMessage);\n","import React from \"react\";\n\nconst CheckboxInput = ({\n  name,\n  value,\n  isValid,\n  onChangeHandler,\n  className,\n}) => {\n  return (\n    <React.Fragment>\n      <input\n        id={name}\n        name={name}\n        type=\"checkbox\"\n        onChange={onChangeHandler}\n        className={className}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(CheckboxInput);\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { authService } from \"../../services\";\n// import { auth } from \"../../services/firebase-config\";\n\nconst INITIAL_STATE = {\n  user: null,\n  loading: false,\n  error: null,\n};\n\nconst loginSlice = createSlice({\n  name: \"login\",\n  initialState: INITIAL_STATE,\n  reducers: {\n    authenticationStart: (state, action) => {\n      state.loading = true;\n    },\n    authenticationSuccess: (state, action) => {\n      state.loading = false;\n      state.user = action.payload.user;\n    },\n    authenticationFailure: (state, action) => {\n      state.loading = false;\n      // state.error = action.payload.error;\n      state.user = \"anonymous\";\n    },\n    signupStart: (state, action) => {\n      state.loading = true;\n    },\n    signupSuccess: (state, action) => {\n      state.loading = false;\n      state.user = action.payload.user;\n    },\n    signupFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.error;\n    },\n    logoutSuccess: (state, action) => {\n      state.user = action.payload.user;\n    },\n    initAutheticatedUser: (state, action) => {\n      state.user = action.payload.user;\n    },\n    resetState: (state) => INITIAL_STATE,\n  },\n});\n\nexport const authenticate = (email, password) => {\n  return (dispatch) => {\n    dispatch(loginSlice.actions.authenticationStart());\n    authService\n      .authenticate(email, password)\n      .then((user) => {\n        dispatch(\n          loginSlice.actions.authenticationSuccess({\n            user: { email: user.email, uid: user.uid },\n          })\n        );\n      })\n      .catch((error) => {\n        dispatch(\n          loginSlice.actions.authenticationFailure({ error: error.message })\n        );\n      });\n  };\n};\n\nexport const signup = (email, password) => {\n  return (dispatch) => {\n    dispatch(loginSlice.actions.signupStart());\n    authService\n      .signUp(email, password)\n      .then((tokenInfo) => {\n        dispatch(loginSlice.actions.signupSuccess({ tokenInfo: tokenInfo }));\n      })\n      .catch((error) => {\n        dispatch(loginSlice.actions.signupFailure({ error: error }));\n      });\n  };\n};\n\nexport const logout = () => {\n  return (dispatch) => {\n    authService.logout().then((_) => {\n      dispatch(loginSlice.actions.logoutSuccess({ user: \"anonymous\" }));\n      window.location.href = \"/login\";\n    });\n  };\n};\n\nexport const checkAuthenticationState = () => {\n  return (dispatch) => {\n    authService.onAuthStateChanged(\n      (user) => {\n        if (!user) {\n          user = \"anonymous\";\n        } else {\n          user = { email: user.email, uid: user.uid };\n        }\n        dispatch(\n          loginSlice.actions.authenticationSuccess({\n            user: user,\n          })\n        );\n      },\n      (error) =>\n        dispatch(\n          loginSlice.actions.authenticationFailure({\n            error: error,\n          })\n        )\n    );\n  };\n};\n\nexport default loginSlice.reducer;\nexport const { resetState } = loginSlice.actions;\n","import React, { Component } from \"react\";\nimport { onInputChange } from \"../../services/form-utils\";\nimport TextInput from \"../../components/UI/TextInput/TextInput\";\nimport ValidationMessages from \"../../components/UI/ValidationMessages/ValidationMessages\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport ApiErrorMessage from \"../../components/UI/ApiErrorMessage/ApiErrorMessage\";\nimport CheckboxInput from \"../../components/UI/CheckboxInput/CheckboxInput\";\nimport { Redirect } from \"react-router-dom\";\n\nimport {\n  authenticate,\n  signup,\n  resetState,\n} from \"../../store/Login/login-slice\";\n\nclass Login extends Component {\n  state = {\n    formModel: {\n      email: {\n        isValid: false,\n        isTouched: false,\n        value: \"\",\n        validators: {\n          isRequired: { isValid: false, message: \"Login is required\" },\n        },\n      },\n      password: {\n        isValid: false,\n        isTouched: false,\n        value: \"\",\n        validators: {\n          isRequired: { isValid: false, message: \"Password is required\" },\n        },\n      },\n      isSignUp: {\n        type: \"checkbox\",\n        isValid: true,\n        isTouched: false,\n        value: false,\n      },\n    },\n    formIsValid: false,\n  };\n\n  handleChange = (e) => {\n    let { formModel, formIsValid } = onInputChange(e, {\n      ...this.state.formModel,\n    });\n    this.setState({ formModel, formIsValid });\n  };\n\n  onSubmitForm = (e) => {\n    e.preventDefault();\n    if (this.state.formModel.isSignUp.value) {\n      this.props.onSignUp(\n        this.state.formModel.email.value,\n        this.state.formModel.password.value\n      );\n    } else {\n      this.props.onLogin(\n        this.state.formModel.email.value,\n        this.state.formModel.password.value\n      );\n    }\n  };\n\n  componentWillUnmount() {\n    // this.props.onClear();\n  }\n\n  render() {\n    if (this.props.isUserAuthenticated) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return (\n      <div className=\"container w-50 position-relative\">\n        <ApiErrorMessage error={this.props.error}></ApiErrorMessage>\n\n        <form onSubmit={this.onSubmitForm}>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email</label>\n            <TextInput\n              name=\"email\"\n              className=\"col-9\"\n              value={this.state.formModel.email.value}\n              onChangeHandler={this.handleChange}\n              isValid={\n                !this.state.formModel.email.isTouched ||\n                this.state.formModel.email.validators.isRequired.isValid\n              }\n            ></TextInput>\n            <ValidationMessages element={this.state.formModel.email} />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <TextInput\n              name=\"password\"\n              type=\"password\"\n              className=\"col-9\"\n              value={this.state.formModel.password.value}\n              onChangeHandler={this.handleChange}\n              isValid={\n                !this.state.formModel.password.isTouched ||\n                this.state.formModel.password.validators.isRequired.isValid\n              }\n            ></TextInput>\n            <ValidationMessages element={this.state.formModel.password} />\n          </div>\n\n          <div className=\"form-group form-check\">\n            <CheckboxInput\n              name=\"isSignUp\"\n              className=\"form-check-input\"\n              value={this.state.formModel.isSignUp.value}\n              onChangeHandler={this.handleChange}\n            ></CheckboxInput>\n            <label className=\"form-check-label\" htmlFor=\"isSignUp\">\n              Switch to Sign up mode ?\n            </label>\n          </div>\n\n          <button\n            type=\"submit\"\n            className={\n              \"btn \" +\n              (this.state.formIsValid ? \"btn-primary\" : \"btn-secondary\")\n            }\n            disabled={!this.state.formIsValid}\n          >\n            Submit\n          </button>\n        </form>\n\n        <Spinner loading={this.props.loading}></Spinner>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.login.user,\n  isUserAuthenticated: state.login.user && state.login.user !== \"anonymous\",\n  error: state.login.error,\n  loading: state.login.loading,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onLogin: (email, password) => dispatch(authenticate(email, password)),\n    onSignUp: (email, password) => dispatch(signup(email, password)),\n    onClear: () => dispatch(resetState()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { useState } from \"react\";\nimport { onInputChange } from \"../../services/form-utils\";\nimport { service } from \"../../services\";\n\nimport TextInput from \"../../components/UI/TextInput/TextInput\";\nimport ValidationMessages from \"../../components/UI/ValidationMessages/ValidationMessages\";\n\nexport const AddCategory = ({ onCategoryAdded }) => {\n  const [formModel, setFormModel] = useState({\n    label: {\n      isValid: false,\n      isTouched: false,\n      value: \"\",\n      validators: {\n        isRequired: { isValid: false, message: \"Label is required\" },\n      },\n    },\n  });\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [displaySuccessMessage, setDisplaySuccessMessage] = useState(false);\n\n  const handleChange = (e) => {\n    let { formModel: newFormModel, formIsValid } = onInputChange(e, {\n      ...formModel,\n    });\n    setFormIsValid(formIsValid);\n    setFormModel(newFormModel);\n  };\n\n  const onSubmitForm = (e) => {\n    e.preventDefault();\n    const category = {};\n    for (let element in formModel) {\n      category[element] = formModel[element].value;\n    }\n\n    service.createCategory(category).then((_) => {\n      setDisplaySuccessMessage(true);\n      resetForm();\n      onCategoryAdded();\n    });\n  };\n\n  const resetForm = () => {\n    let resetFormModel = { ...formModel };\n    Object.keys(resetFormModel).forEach((key) => {\n      resetFormModel[key].value = \"\";\n    });\n    setFormModel(resetFormModel);\n    setFormIsValid(false);\n  };\n\n  return (\n    <React.Fragment>\n      {displaySuccessMessage && (\n        <div\n          className=\"container alert alert-success alert-dismissible fade show w-50\"\n          role=\"alert\"\n        >\n          Category has been created successfully\n          <button\n            type=\"button\"\n            className=\"close\"\n            data-dismiss=\"alert\"\n            aria-label=\"Close\"\n            onClick={() => setDisplaySuccessMessage(false)}\n          >\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n      )}\n\n      <form onSubmit={onSubmitForm} className=\"container w-50\">\n        <div className=\"form-group\">\n          <label htmlFor=\"label\">Label</label>\n          <TextInput\n            name=\"label\"\n            value={formModel.label.value}\n            onChangeHandler={handleChange}\n            className=\"col-5\"\n            isValid={\n              !formModel.label.isTouched ||\n              formModel.label.validators.isRequired.isValid\n            }\n          ></TextInput>\n          <ValidationMessages element={formModel.label} />\n        </div>\n\n        <button\n          type=\"submit\"\n          className={\"btn \" + (formIsValid ? \"btn-primary\" : \"btn-secondary\")}\n          disabled={!formIsValid}\n        >\n          Add\n        </button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default AddCategory;\n","import React, { useState } from \"react\";\nimport Modal from \"../../hoc/Modal/Modal\";\nimport { service } from \"../../services\";\n\nconst Categories = ({ categories, onCategoryDeleted }) => {\n  const [dispalyDeleteModal, setDispalyDeleteModal] = useState(false);\n  const [categoryID, setCategoryID] = useState(null);\n\n  const onDeleteCategory = () => {\n    service.deleteCategory(categoryID).then((_) => {\n      setDispalyDeleteModal(false);\n      onCategoryDeleted();\n    });\n  };\n\n  return (\n    <div>\n      <div className=\"container\">\n        <table className=\"table table-striped\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Label</th>\n              <th scope=\"col\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {categories.map((category) => {\n              return (\n                <tr key={category.id}>\n                  <td>{category.label}</td>\n                  <td>\n                    <i\n                      style={{ cursor: \"pointer\" }}\n                      className=\"fa fa-trash\"\n                      onClick={() => {\n                        setCategoryID(category.id);\n                        setDispalyDeleteModal(true);\n                      }}\n                    ></i>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n\n        <Modal\n          displayModal={dispalyDeleteModal}\n          closeModalHandler={() => setDispalyDeleteModal(false)}\n          submitHandler={() => onDeleteCategory()}\n          className=\"w-25\"\n        >\n          Are you sure what are you about to do ?\n        </Modal>\n      </div>\n    </div>\n  );\n};\n\nexport default Categories;\n","import React, { useState, useEffect } from \"react\";\nimport AddCategory from \"../../components/AddCategory/AddCategory\";\nimport Categories from \"../../components/Categories/Categories\";\nimport { service } from \"../../services\";\n\nexport const ManageCategories = () => {\n  const [categories, setCategories] = useState(null);\n\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n\n  const reloadCategories = () => {\n    fetchCategories();\n  };\n\n  const fetchCategories = () => {\n    service.fetchCategories().then((categories) => {\n      categories = categories.map((cat) => ({\n        id: cat.value,\n        label: cat.name,\n      }));\n      setCategories(categories);\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <h4 className=\"container w-50\">Add a new category :</h4>\n      <AddCategory onCategoryAdded={reloadCategories} />\n\n      <h4 className=\"container w-50 mt-4\">List of categories:</h4>\n      {categories && (\n        <Categories\n          categories={categories}\n          onCategoryDeleted={reloadCategories}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default ManageCategories;\n","import { service } from \"../../services\";\n\nexport const FETCH_PRODUCTS_START1 = \"FETCH_PRODUCTS_START1\";\nexport const FETCH_PRODUCTS_SUCCESS1 = \"FETCH_PRODUCTS_SUCCESS1\";\nexport const FETCH_PRODUCTS_FAIL1 = \"FETCH_PRODUCTS_FAIL1\";\n\nexport const OPEN_UPDATE_PRODUCT_MODAL = \"OPEN_UPDATE_PRODUCT_MODAL\";\nexport const CLOSE_UPDATE_PRODUCT_MODAL = \"CLOSE_UPDATE_PRODUCT_MODAL\";\nexport const GET_PRODUCT_SUCCESS = \"GET_PRODUCT_SUCCESS\";\nexport const UPDATE_PRODUCT_SUCCESS = \"UPDATE_PRODUCT_SUCCESS\";\n\nexport const OPEN_DELETE_PRODUCT_MODAL = \"OPEN_DELETE_PRODUCT_MODAL\";\nexport const CLOSE_DELETE_PRODUCT_MODAL = \"CLOSE_DELETE_PRODUCT_MODAL\";\nexport const DELETE_PRODUCT_SUCCESS = \"DELETE_PRODUCT_SUCCESS\";\n\nexport const FETCH_CATEGORIES_SUCCESS = \"FETCH_CATEGORIES_SUCCESS\";\nexport const FETCH_CATEGORIES_FAIL = \"FETCH_CATEGORIES_FAIL\";\n\nexport const fetchProducts = () => {\n  return (dispatch) => {\n    dispatch(fetchProductsStart());\n    service\n      .fetchProducts()\n      .then((products) => {\n        dispatch(fetchProductSuccess(products));\n      })\n      .catch((error) => {\n        dispatch(fetchProductsFail(error));\n      });\n  };\n};\n\nconst fetchProductsStart = () => {\n  return {\n    type: FETCH_PRODUCTS_START1,\n  };\n};\n\nconst fetchProductSuccess = (products) => {\n  return {\n    type: FETCH_PRODUCTS_SUCCESS1,\n    products: products,\n  };\n};\nconst fetchProductsFail = (error) => {\n  return {\n    type: FETCH_PRODUCTS_FAIL1,\n    error: error,\n  };\n};\n\nconst updateProductSuccess = () => {\n  return {\n    type: UPDATE_PRODUCT_SUCCESS,\n  };\n};\n\nexport const updateProduct = (product) => {\n  return (dispatch) => {\n    service.updateProduct(product).then((_) => {\n      dispatch(updateProductSuccess());\n      dispatch(fetchProducts());\n    });\n  };\n};\n\nexport const openUpdateProductModal = (productID) => {\n  return (dispatch) => {\n    dispatch({ type: OPEN_UPDATE_PRODUCT_MODAL, productID: productID });\n    service.getProduct(productID).then((product) => {\n      dispatch(getProductSuccess(product));\n    });\n  };\n};\n\nconst getProductSuccess = (product) => {\n  return {\n    type: GET_PRODUCT_SUCCESS,\n    product: product,\n  };\n};\n\n// const mapSnapshotToProduct = (productID, data) => {\n//   let product = {\n//     id: productID,\n//     title: data[productID].title,\n//     description: data[productID].description,\n//     price: data[productID].price,\n//     image: data[productID].image,\n//     category: data[productID].category,\n//   };\n\n//   return product;\n// };\n\nexport const closeUpdateProductModal = () => {\n  return {\n    type: CLOSE_UPDATE_PRODUCT_MODAL,\n  };\n};\n\nexport const openDeleteProductModal = (productID) => {\n  return {\n    type: OPEN_DELETE_PRODUCT_MODAL,\n    productID: productID,\n  };\n};\n\nexport const closeDeleteProductModal = () => {\n  return {\n    type: CLOSE_DELETE_PRODUCT_MODAL,\n  };\n};\n\nconst deleteProductSuccess = () => {\n  return { type: DELETE_PRODUCT_SUCCESS };\n};\n\nexport const deleteProduct = (productID) => {\n  return (dispatch) => {\n    service.deleteProduct(productID).then((_) => {\n      dispatch(deleteProductSuccess());\n      dispatch(fetchProducts());\n    });\n  };\n};\n\nexport const fetchCategories = () => {\n  return (dispatch) => {\n    service.fetchCategories().then((categories) => {\n      dispatch(fetchCategoriesSuccess(categories));\n    });\n  };\n};\n\nconst fetchCategoriesSuccess = (data) => {\n  return {\n    type: FETCH_CATEGORIES_SUCCESS,\n    categories: data,\n  };\n};\n","import React, { Component } from \"react\";\nimport ValidationMessages from \"../UI/ValidationMessages/ValidationMessages\";\nimport TextInput from \"../UI/TextInput/TextInput\";\nimport Select from \"../UI/Select/Select\";\nimport TextareaInput from \"../UI/TextareaInput/TextareaInput\";\nimport { onInputChange } from \"../../services/form-utils\";\n\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/ManageProducts/actions\";\n\nclass EditProduct extends Component {\n  state = {\n    formModel: {\n      id: {\n        value: \"\",\n        isValid: true,\n      },\n      title: {\n        isValid: true,\n        isTouched: false,\n        value: \"\",\n        validators: {\n          isRequired: { isValid: true, message: \"Title is required\" },\n        },\n      },\n      category: {\n        isValid: true,\n        isTouched: false,\n        value: \"\",\n        options: [{ value: \"\", name: \"None\" }],\n        validators: {\n          isRequired: { isValid: true, message: \"Category is required\" },\n        },\n      },\n      description: {\n        isValid: true,\n        isTouched: false,\n        value: \"\",\n        validators: {\n          isRequired: { isValid: true, message: \"Description is Required\" },\n          minLength: {\n            minLength: 5,\n            isValid: true,\n            message: \"Description at least 5 char\",\n          },\n          maxLength: {\n            maxLength: 100,\n            isValid: true,\n            message: \"Description max 100 char\",\n          },\n        },\n      },\n      image: {\n        isValid: true,\n        isTouched: false,\n        value: \"\",\n      },\n      price: {\n        isValid: true,\n        isTouched: false,\n        value: \"\",\n        validators: {\n          isRequired: { isValid: true, message: \"Price is Required\" },\n          isDecimal: { isValid: true, message: \"Price must be decimal\" },\n        },\n      },\n    },\n    formIsValid: true,\n  };\n\n  componentDidMount() {\n    this.props.onFetchCategories();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.product !== prevProps.product) {\n      let formModel = { ...this.state.formModel };\n      let product = this.props.product;\n      formModel.id.value = this.props.productID;\n      formModel.title.value = product.title;\n      formModel.description.value = product.description;\n      formModel.price.value = product.price;\n      formModel.image.value = product.image;\n      formModel.category.value = product.category;\n      this.setState({ formModel: formModel });\n    }\n\n    if (\n      this.state.formModel.category.options.length === 1 &&\n      this.props.categories !== null\n    ) {\n      let formModel = { ...this.state.formModel };\n      console.log(\"categories\", this.props.categories);\n      let options = [...formModel.category.options, ...this.props.categories];\n\n      // let formModel = { ...this.state.formModel };\n      //   formModel.category.options = [\n      //     ...formModel.category.options,\n      //     ...categories,\n      //   ];\n\n      //   this.setState({ formModel: formModel });\n\n      // Object.keys(this.props.categories).forEach((key) => {\n      //   options = [\n      //     ...options,\n      //     {\n      //       value: key,\n      //       name: this.props.categories[key],\n      //     },\n      //   ];\n      // });\n      formModel.category.options = options;\n\n      this.setState({ formModel: formModel });\n    }\n  }\n\n  onEditProduct = (e) => {\n    e.preventDefault();\n    const product = {};\n    for (let element in this.state.formModel) {\n      product[element] = this.state.formModel[element].value;\n    }\n\n    this.props.onUpdateProduct(product);\n  };\n\n  handleChange = (e) => {\n    let { formModel, formIsValid } = onInputChange(e, {\n      ...this.state.formModel,\n    });\n    this.setState({ formModel, formIsValid });\n  };\n\n  resetForm = () => {\n    let formModel = { ...this.state.formModel };\n    Object.keys(formModel).forEach((key) => {\n      formModel[key].value = \"\";\n    });\n    this.setState({ formModel: formModel });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <form className=\"container\">\n          <div className=\"form-group\">\n            <label htmlFor=\"title\">Title</label>\n            <TextInput\n              name=\"title\"\n              value={this.state.formModel.title.value}\n              onChangeHandler={this.handleChange}\n              isValid={\n                !this.state.formModel.title.isTouched ||\n                this.state.formModel.title.validators.isRequired.isValid\n              }\n            ></TextInput>\n            <ValidationMessages element={this.state.formModel.title} />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"description\">Description</label>\n            <TextareaInput\n              name=\"description\"\n              value={this.state.formModel.description.value}\n              onChangeHandler={this.handleChange}\n              isValid={\n                !this.state.formModel.description.isTouched ||\n                (this.state.formModel.description.validators.isRequired\n                  .isValid &&\n                  this.state.formModel.description.validators.minLength\n                    .isValid &&\n                  this.state.formModel.description.validators.maxLength.isValid)\n              }\n            ></TextareaInput>\n            <ValidationMessages element={this.state.formModel.description} />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"category\">Category</label>\n            <Select\n              name=\"category\"\n              value={this.state.formModel.category.value}\n              options={this.state.formModel.category.options}\n              onChangeHandler={this.handleChange}\n              className=\"col-5\"\n              isValid={\n                !this.state.formModel.category.isTouched ||\n                this.state.formModel.category.validators.isRequired.isValid\n              }\n            ></Select>\n            <ValidationMessages element={this.state.formModel.category} />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"image\">Image</label>\n            <TextInput\n              name=\"image\"\n              className=\"col-5\"\n              value={this.state.formModel.image.value}\n              isValid=\"true\"\n              onChangeHandler={this.handleChange}\n            ></TextInput>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"price\">Price</label>\n            <TextInput\n              name=\"price\"\n              value={this.state.formModel.price.value}\n              onChangeHandler={this.handleChange}\n              className=\"col-2\"\n              isValid={\n                !this.state.formModel.price.isTouched ||\n                (this.state.formModel.price.validators.isRequired.isValid &&\n                  this.state.formModel.price.validators.isDecimal.isValid)\n              }\n            ></TextInput>\n            <ValidationMessages element={this.state.formModel.price} />\n          </div>\n\n          <button\n            type=\"submit\"\n            className={\n              \"btn f-right \" +\n              (this.state.formIsValid ? \"btn-primary\" : \"btn-secondary\")\n            }\n            disabled={!this.state.formIsValid}\n            onClick={this.onEditProduct}\n          >\n            Submit\n          </button>\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    productID: state.manageProducts.productID,\n    product: state.manageProducts.product,\n    categories: state.manageProducts.categories,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onFetchCategories: () => dispatch(actions.fetchCategories()),\n    onUpdateProduct: (product) => dispatch(actions.updateProduct(product)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditProduct);\n","import React, { useEffect } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport * as actions from \"../../store/ManageProducts/actions\";\nimport EditProduct from \"../../components/EditProduct/EditProduct\";\nimport Modal from \"../../hoc/Modal/Modal\";\nimport Guard from \"../../hoc/Guard/Guard\";\n\nconst ManageProducts = (props) => {\n  const dispatch = useDispatch();\n  useEffect(() => dispatch(actions.fetchProducts()), [dispatch]);\n\n  return (\n    <div className=\"container\">\n      <table className=\"table table-striped\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Title</th>\n            <th scope=\"col\">Category</th>\n            <th scope=\"col\">Price</th>\n            <th scope=\"col\">Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {console.log(props.products)}\n          {props.products.map((product) => {\n            return (\n              <tr key={product.id}>\n                <td>{product.title}</td>\n                <td>{product.category}</td>\n                <td>{product.price}</td>\n                <td>\n                  <i\n                    style={{ cursor: \"pointer\" }}\n                    className=\"fa fa-edit mr-2\"\n                    onClick={() => props.onOpenUpdateProductModal(product.id)}\n                  ></i>\n                  <i\n                    style={{ cursor: \"pointer\" }}\n                    className=\"fa fa-trash\"\n                    onClick={() => props.onOpenDeleteProductModal(product.id)}\n                  ></i>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n\n      {props.displayEditModal ? (\n        <Modal\n          displayModal={props.displayEditModal}\n          closeModalHandler={props.onCloseUpdateProductModal}\n          className=\"w-50\"\n          disableActionSection\n          title=\" \"\n        >\n          <EditProduct />\n        </Modal>\n      ) : null}\n\n      <Modal\n        displayModal={props.displayDeleteModalConfirmation}\n        closeModalHandler={props.onCloseDeleteProductModal}\n        submitHandler={() => props.onDeleteProduct(props.productID)}\n        className=\"w-25\"\n      >\n        Are you sure what are you about to do ?\n      </Modal>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    products: state.manageProducts.products,\n    displayEditModal: state.manageProducts.displayEditModal,\n    displayDeleteModalConfirmation:\n      state.manageProducts.displayDeleteModalConfirmation,\n    productID: state.manageProducts.productID,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onOpenUpdateProductModal: (productID) =>\n      dispatch(actions.openUpdateProductModal(productID)),\n    onCloseUpdateProductModal: () =>\n      dispatch(actions.closeUpdateProductModal()),\n    onUpdateProduct: (product) => dispatch(actions.updateProduct(product)),\n    onOpenDeleteProductModal: (productID) =>\n      dispatch(actions.openDeleteProductModal(productID)),\n    onCloseDeleteProductModal: () =>\n      dispatch(actions.closeDeleteProductModal()),\n    onDeleteProduct: (productID) => dispatch(actions.deleteProduct(productID)),\n  };\n};\n\nexport default Guard(\n  connect(mapStateToProps, mapDispatchToProps)(ManageProducts)\n);\n","import React, { useState } from \"react\";\n\nconst Paginator = ({ pagesCount, onPaginate }) => {\n  const [currentPage, setCurrentPage] = useState(1);\n\n  let nbrPages = pagesCount; // Math.floor(count / pageSize);\n\n  const onSelectPage = (page, event) => {\n    event.preventDefault();\n    setCurrentPage(page);\n    onPaginate(page);\n  };\n\n  let pages = [];\n  for (let index = 1; index <= nbrPages; index++) {\n    pages.push(\n      <li\n        key={index}\n        onClick={(e) => onSelectPage(index, e)}\n        className={\"page-item\" + (currentPage === index ? \" active\" : \"\")}\n      >\n        <a className=\"page-link\" href=\"/\">\n          {index}\n        </a>\n      </li>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      {nbrPages > 1 ? (\n        <nav>\n          <ul className=\"pagination justify-content-center\">\n            <li onClick={(e) => onSelectPage(1, e)} className=\"page-item\">\n              <a className=\"page-link\" href=\"/\" aria-label=\"Previous\">\n                <span aria-hidden=\"true\">&laquo;</span>\n              </a>\n            </li>\n\n            {pages}\n\n            <li\n              onClick={(e) => onSelectPage(nbrPages, e)}\n              className=\"page-item\"\n            >\n              <a className=\"page-link\" href=\"/\" aria-label=\"Next\">\n                <span aria-hidden=\"true\">&raquo;</span>\n              </a>\n            </li>\n          </ul>\n        </nav>\n      ) : null}\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(Paginator);\n","import { service } from \"../../services\";\n\nexport const FETCH_ORDERS_START = \"FETCH_ORDERS_START\";\nexport const FETCH_ORDERS_SUCCESS = \"FETCH_ORDERS_SUCCESS\";\nexport const FETCH_ORDERS_FAIL = \"FETCH_ORDERS_FAIL\";\n\nexport const OPEN_DELETE_ORDER_MODAL = \"OPEN_DELETE_ORDER_MODAL\";\nexport const CLOSE_DELETE_ORDER_MODAL = \"CLOSE_DELETE_ORDER_MODAL\";\nexport const DELETE_ORDER_SUCCESS = \"DELETE_ORDER_SUCCESS\";\nexport const RESET_ORDERS_STATE = \"RESET_ORDERS_STATE\";\n\nexport const fetchOrdersStart = () => {\n  return {\n    type: FETCH_ORDERS_START,\n  };\n};\n\nexport const fetchOrdersSuccess = (pagesCount, orders) => {\n  return {\n    type: FETCH_ORDERS_SUCCESS,\n    orders: orders,\n    pagesCount: pagesCount,\n  };\n};\n\nexport const fetchOrdersFail = (error) => {\n  return {\n    type: FETCH_ORDERS_FAIL,\n    error: error,\n  };\n};\n\nexport const fetchOrders = (userID, pageNumber, pageSize) => {\n  return (dispatch) => {\n    dispatch(fetchOrdersStart());\n    service\n      .fetchOrders(userID, pageNumber, pageSize)\n      .then(({ x: pageCounts, y: orders }) => {\n        dispatch(fetchOrdersSuccess(pageCounts, orders));\n      })\n      .catch((error) => {\n        dispatch(fetchOrdersFail(error));\n      });\n  };\n};\n\nexport const openDeleteOrderModal = (orderID) => {\n  return {\n    type: OPEN_DELETE_ORDER_MODAL,\n    orderID: orderID,\n  };\n};\n\nexport const closeDeleteOrderModal = () => {\n  return {\n    type: CLOSE_DELETE_ORDER_MODAL,\n  };\n};\n\nconst deleteOrderSuccess = () => {\n  return { type: DELETE_ORDER_SUCCESS };\n};\n\nexport const deleteOrder = (orderID, userID) => {\n  return (dispatch) => {\n    service.deleteOrder(orderID).then((_) => {\n      dispatch(deleteOrderSuccess());\n      dispatch(fetchOrders(userID, 1, 3));\n    });\n  };\n};\n\nexport const resetState = () => {\n  return { type: RESET_ORDERS_STATE };\n};\n","import { format } from \"date-fns\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Paginator from \"../../components/UI/Paginator/Paginator\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport Guard from \"../../hoc/Guard/Guard\";\nimport Modal from \"../../hoc/Modal/Modal\";\nimport * as actions from \"../../store/Orders/actions\";\n\nconst Orders = () => {\n  let pageSize = 3;\n\n  const orders = useSelector((state) => state.orders.orders);\n  const pagesCount = useSelector((state) => state.orders.pagesCount);\n  const orderID = useSelector((state) => state.orders.orderID);\n  const user = useSelector((state) => state.login.user);\n  const loading = useSelector((state) => state.orders.loading);\n  const displayDeleteModalConfirmation = useSelector(\n    (state) => state.orders.displayDeleteModalConfirmation\n  );\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (user) {\n      dispatch(actions.fetchOrders(user.uid, 1, pageSize));\n    }\n    return () => dispatch(actions.resetState());\n  }, [user, pageSize, dispatch]);\n\n  const reloadOrders = (currentPage) => {\n    dispatch(actions.fetchOrders(user.uid, currentPage, pageSize));\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"container position-relative\">\n        <Spinner loading={loading}></Spinner>\n        <React.Fragment>\n          <table className=\"table table-striped\">\n            <thead>\n              <tr>\n                <th scope=\"col\">Products</th>\n                <th scope=\"col\">Date</th>\n                <th scope=\"col\">Price</th>\n                <th scope=\"col\">Status</th>\n                <th scope=\"col\">Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders &&\n                orders.map((order) => {\n                  return (\n                    <tr key={order.id}>\n                      <td>\n                        {order.products.map((p) => (\n                          <React.Fragment key={p.productID}>\n                            <div>{p.title}</div>\n                            <div>qty : {p.qty}</div>\n                          </React.Fragment>\n                        ))}\n                      </td>\n                      <td>\n                        {format(\n                          new Date(order.creationDate),\n                          \"dd/MM/yyyy HH:mm:ss\"\n                        )}\n                      </td>\n                      <td>{order.price}</td>\n                      <td>{order.status}</td>\n                      <td>\n                        {order.status === \"INITIATED\" ? (\n                          <i\n                            style={{ cursor: \"pointer\" }}\n                            className=\"fa fa-trash\"\n                            onClick={() =>\n                              dispatch(actions.openDeleteOrderModal(order.id))\n                            }\n                          ></i>\n                        ) : null}\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </table>\n          <Paginator\n            pagesCount={pagesCount}\n            onPaginate={reloadOrders}\n          ></Paginator>\n        </React.Fragment>\n      </div>\n\n      <Modal\n        displayModal={displayDeleteModalConfirmation}\n        closeModalHandler={() => dispatch(actions.closeDeleteOrderModal())}\n        submitHandler={() => dispatch(actions.deleteOrder(orderID, user.uid))}\n        className=\"w-25\"\n      >\n        Are you sure you want to delete this order ?\n      </Modal>\n    </React.Fragment>\n  );\n};\n\nexport default Guard(Orders);\n","import React, { Component } from \"react\";\n\nimport { service } from \"../../services\";\n\nimport { parseInput, validateInput } from \"../../services/form-utils\";\nimport TextInput from \"../../components/UI/TextInput/TextInput\";\n\nimport ValidationMessages from \"../../components/UI/ValidationMessages/ValidationMessages\";\n\nexport default class ProductDetails extends Component {\n  state = {\n    product: null,\n    isProductInStock: true,\n    formIsValid: false,\n    formModel: {\n      quantity: {\n        isValid: false,\n        isTouched: false,\n        value: \"\",\n        validators: {\n          isRequired: { isValid: false, message: \"QTY is required\" },\n          isNumeric: { isValid: false, message: \"QTY must be numeric\" },\n        },\n      },\n    },\n  };\n\n  componentDidMount() {\n    let productID = this.props.match.params.id;\n\n    if (productID) {\n      service.getProduct(productID).then((product) => {\n        this.setState({ product: product });\n      });\n    }\n  }\n\n  handleChange = (e) => {\n    e.persist();\n    let formModel = { ...this.state.formModel };\n    let i = formModel[e.target.name];\n    i.value = i.type === \"checkbox\" ? e.target.checked : e.target.value;\n    i.isTouched = true;\n    parseInput(i);\n    validateInput(i);\n    let formIsValid = true;\n    for (let inputIdentifier in formModel) {\n      formIsValid = formModel[inputIdentifier].isValid && formIsValid;\n    }\n    this.setState({ formModel, formIsValid });\n  };\n\n  addToCart = (e) => {\n    e.preventDefault();\n    if (localStorage.getItem(\"CART\")) {\n      let cart = JSON.parse(localStorage.getItem(\"CART\"));\n      if (cart[this.state.product.id]) {\n        cart[this.state.product.id] =\n          parseInt(cart[this.state.product.id]) +\n          parseInt(this.state.formModel.quantity.value);\n      } else {\n        cart[this.state.product.id] = this.state.formModel.quantity.value;\n      }\n\n      localStorage.setItem(\"CART\", JSON.stringify(cart));\n    } else {\n      let product = {};\n      product[this.state.product.id] = this.state.formModel.quantity.value;\n      localStorage.setItem(\"CART\", JSON.stringify(product));\n    }\n    this.props.history.push(\"/cart\");\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.product != null ? (\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-4\">\n                <div className=\"col-12\">\n                  <div>\n                    <img\n                      src={\n                        \"/assets/images/products/\" + this.state.product.image\n                      }\n                      className={\"card-img-top p-2 rounded \"}\n                      style={{ maxHeight: \"200px\" }}\n                      alt={this.state.product.title}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"col-8\">\n                <div className=\"card\">\n                  <div className=\"card-header\">Details</div>\n                  <ul className=\"list-group list-group-flush\">\n                    <li className=\"list-group-item\">\n                      <p>{this.state.product.description}</p>\n                    </li>\n                    <li className=\"list-group-item\">\n                      Price: {this.state.product.price}\n                    </li>\n                    <li className=\"list-group-item\">\n                      ISBN: {this.state.product.id}\n                    </li>\n                    <li className=\"list-group-item\">\n                      <form onSubmit={this.addToCart}>\n                        <div className=\"form-inline\">\n                          <div className=\"form-group\" style={{ width: \"15%\" }}>\n                            <TextInput\n                              name=\"quantity\"\n                              className=\"form-control col-11\"\n                              value={this.state.formModel.quantity.value}\n                              onChangeHandler={this.handleChange}\n                              isValid={\n                                !this.state.formModel.quantity.isTouched ||\n                                this.state.formModel.quantity.validators\n                                  .isRequired.isValid\n                              }\n                            ></TextInput>\n                            <ValidationMessages\n                              element={this.state.formModel.quantity}\n                            />\n                          </div>\n                          <button\n                            className={\n                              \"btn \" +\n                              (this.state.formIsValid\n                                ? \"btn-primary\"\n                                : \"btn-secondary\")\n                            }\n                            disabled={!this.state.formIsValid}\n                            type=\"submit\"\n                          >\n                            Add to Cart\n                          </button>\n                        </div>\n                      </form>\n                    </li>\n                    {!this.state.isProductInStock ? (\n                      <div>\n                        <div>Out of stock</div>\n                      </div>\n                    ) : null}\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : null}\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport classes from \"./NavBar.module.css\";\nimport { connect } from \"react-redux\";\n\nimport { logout } from \"../../store/Login/login-slice\";\n\nclass NavBar extends Component {\n  state = {\n    displaySubMenu: false,\n  };\n\n  toggleDropDown = () => {\n    this.setState((prevState) => {\n      return { displaySubMenu: !prevState.displaySubMenu };\n    });\n  };\n\n  logout = () => {\n    this.props.onLogout();\n  };\n\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light h5\">\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav mx-auto\">\n            <li className={[\"nav-item\", classes.logo].join(\" \")}>\n              <a href=\"/\" className=\"nav-link active\">\n                <i className=\"fa fa-cloud fa-2x align-middle\"></i>\n                <span className=\"ml-1 mb-3\">Cloud Shop</span>\n              </a>\n            </li>\n            <li className=\"nav-item mr-3 my-auto\">\n              <NavLink to=\"/\" exact className=\"nav-link\">\n                Home <span className=\"sr-only\">(current)</span>\n              </NavLink>\n            </li>\n\n            {this.props.isUserAuthenticated ? (\n              <li className=\"nav-item mr-3 my-auto\">\n                <NavLink to=\"/orders\" exact className=\"nav-link\">\n                  Orders\n                </NavLink>\n              </li>\n            ) : null}\n\n            <li className=\"nav-item mr-3 my-auto\">\n              <NavLink to=\"/cart\" exact className=\"nav-link\">\n                <i className=\"fa fa-shopping-cart\"></i>\n                <span className=\"ml-1\">Cart</span>\n              </NavLink>\n            </li>\n\n            {this.props.isUserAuthenticated ? (\n              <li\n                className={\n                  \"nav-item dropdown mr-3 my-auto \" +\n                  (this.state.displaySubMenu ? \"show\" : \"\")\n                }\n              >\n                <button\n                  className=\"nav-link dropdown-toggle bg-light border-0\"\n                  id=\"navbarDropdown\"\n                  data-toggle=\"dropdown\"\n                  aria-haspopup=\"true\"\n                  aria-expanded={this.state.displaySubMenu}\n                  onClick={() => this.toggleDropDown()}\n                >\n                  <i className=\"fa fa-cog\"></i>\n                  <span className=\"ml-1\">Settings</span>\n                </button>\n                <div\n                  className={\n                    \"dropdown-menu \" + (this.state.displaySubMenu ? \"show\" : \"\")\n                  }\n                  aria-labelledby=\"navbarDropdown\"\n                >\n                  <NavLink\n                    to=\"/add-product\"\n                    exact\n                    className=\"dropdown-item\"\n                    onClick={() => this.toggleDropDown()}\n                  >\n                    <i className=\"fa fa-cog\"></i>\n                    <span className=\"ml-1\">Add Product</span>\n                  </NavLink>\n                  <NavLink\n                    to=\"/manage-products\"\n                    exact\n                    className=\"dropdown-item\"\n                    onClick={() => this.toggleDropDown()}\n                  >\n                    <i className=\"fa fa-cog\"></i>\n                    <span className=\"ml-1\">Manage Products</span>\n                  </NavLink>\n\n                  <NavLink\n                    to=\"/manage-categories\"\n                    exact\n                    className=\"dropdown-item\"\n                    onClick={() => this.toggleDropDown()}\n                  >\n                    <i className=\"fa fa-cog\"></i>\n                    <span className=\"ml-1\">Manage Categories</span>\n                  </NavLink>\n\n                  <NavLink\n                    to=\"/manage-promotions\"\n                    exact\n                    className=\"dropdown-item\"\n                    onClick={() => this.toggleDropDown()}\n                  >\n                    <i className=\"fa fa-cog\"></i>\n                    <span className=\"ml-1\">Manage Promotions</span>\n                  </NavLink>\n                </div>\n              </li>\n            ) : null}\n\n            {!this.props.isUserAuthenticated ? (\n              <li className=\"nav-item mr-3 my-auto\">\n                <NavLink to=\"/login\" exact className=\"nav-link\">\n                  <i className=\"fa fa-sign-in\"></i>\n                  <span className=\"ml-1\">Login</span>\n                </NavLink>\n              </li>\n            ) : null}\n\n            {this.props.isUserAuthenticated ? (\n              <li className=\"nav-item mr-3 my-auto\">\n                <button\n                  className={[\n                    \"nav-link bg-light border-0\",\n                    classes.logout,\n                  ].join(\" \")}\n                  onClick={this.props.onLogout}\n                >\n                  <i className=\"fa fa-sign-out\"></i>\n                  <span className=\"ml-1\">Logout</span>\n                </button>\n              </li>\n            ) : null}\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isUserAuthenticated: state.login.user && state.login.user !== \"anonymous\",\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onLogout: () => dispatch(logout()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);\n","import React from \"react\";\nimport NavBar from \"../../components/NavBar/NavBar\";\n\nconst Layout = (props) => {\n  return (\n    <React.Fragment>\n      <NavBar />\n\n      <main className=\"pt-5\">{props.children}</main>\n\n      {/* <Footer></Footer> */}\n    </React.Fragment>\n  );\n};\n\nexport default Layout;\n","import React, { useState, useEffect } from \"react\";\nimport { onInputChange } from \"../../services/form-utils\";\nimport { service } from \"../../services\";\n\nimport TextInput from \"../UI/TextInput/TextInput\";\nimport ValidationMessages from \"../UI/ValidationMessages/ValidationMessages\";\nimport Select from \"../UI/Select/Select\";\n\nexport const AddPromotion = ({ onPromotionAdded }) => {\n  const [formModel, setFormModel] = useState({\n    label: {\n      isValid: false,\n      isTouched: false,\n      value: \"\",\n      validators: {\n        isRequired: { isValid: false, message: \"Label is required\" },\n      },\n    },\n    product: {\n      isValid: false,\n      isTouched: false,\n      value: \"\",\n      options: [{ name: \"Select a product\", value: \"\" }],\n      validators: {\n        isRequired: { isValid: false, message: \"Product is required\" },\n      },\n    },\n    percentageOff: {\n      isValid: false,\n      isTouched: false,\n      value: \"\",\n      validators: {\n        isRequired: { isValid: false, message: \"Percentage Off is required\" },\n        isDecimal: {\n          isValid: false,\n          message: \"Percentage Off must be decimal\",\n        },\n      },\n    },\n    activeFrom: {\n      isValid: false,\n      isTouched: false,\n      value: \"\",\n      validators: {\n        isRequired: { isValid: false, message: \"Date activation is required\" },\n      },\n    },\n    activeTo: {\n      isValid: false,\n      isTouched: false,\n      value: \"\",\n      validators: {\n        isRequired: { isValid: false, message: \"Date activation is required\" },\n      },\n    },\n  });\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [displaySuccessMessage, setDisplaySuccessMessage] = useState(false);\n\n  useEffect(() => {\n    service.fetchProducts().then((products) => {\n      let formattedProducts = products.map((p) => ({\n        name: p.title,\n        value: p.id,\n      }));\n      let newFormModel = { ...formModel, product: { ...formModel.product } };\n      newFormModel.product.options = [\n        ...newFormModel.product.options,\n        ...formattedProducts,\n      ];\n\n      setFormModel(newFormModel);\n    });\n  }, []);\n\n  const handleChange = (e) => {\n    let { formModel: newFormModel, formIsValid } = onInputChange(e, {\n      ...formModel,\n    });\n    setFormIsValid(formIsValid);\n    setFormModel(newFormModel);\n\n    console.log(\"formMOdel\", formModel);\n  };\n\n  const onSubmitForm = (e) => {\n    e.preventDefault();\n    const promotion = {};\n    for (let element in formModel) {\n      promotion[element] = formModel[element].value;\n    }\n\n    service.createPromotion(promotion).then((_) => {\n      setDisplaySuccessMessage(true);\n      resetForm();\n      onPromotionAdded();\n    });\n  };\n\n  const resetForm = () => {\n    let resetFormModel = { ...formModel };\n    Object.keys(resetFormModel).forEach((key) => {\n      resetFormModel[key].value = \"\";\n    });\n    setFormModel(resetFormModel);\n    setFormIsValid(false);\n  };\n\n  return (\n    <React.Fragment>\n      {displaySuccessMessage && (\n        <div\n          className=\"container alert alert-success alert-dismissible fade show w-50\"\n          role=\"alert\"\n        >\n          Promotion has been created successfully\n          <button\n            type=\"button\"\n            className=\"close\"\n            data-dismiss=\"alert\"\n            aria-label=\"Close\"\n            onClick={() => setDisplaySuccessMessage(false)}\n          >\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n      )}\n\n      <form onSubmit={onSubmitForm} className=\"container w-50\">\n        <div className=\"form-group\">\n          <label htmlFor=\"label\">Label</label>\n          <TextInput\n            name=\"label\"\n            value={formModel.label.value}\n            onChangeHandler={handleChange}\n            className=\"col-5\"\n            isValid={\n              !formModel.label.isTouched ||\n              formModel.label.validators.isRequired.isValid\n            }\n          ></TextInput>\n          <ValidationMessages element={formModel.label} />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"product\">Product</label>\n          <Select\n            name=\"product\"\n            value={formModel.product.value}\n            options={formModel.product.options}\n            onChangeHandler={handleChange}\n            className=\"col-5\"\n            isValid={\n              !formModel.product.isTouched ||\n              formModel.product.validators.isRequired.isValid\n            }\n          ></Select>\n          <ValidationMessages element={formModel.product} />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"activeFrom\">Activated from</label>\n          <TextInput\n            name=\"activeFrom\"\n            type=\"date\"\n            value={formModel.activeFrom.value}\n            onChangeHandler={handleChange}\n            className=\"col-5\"\n            isValid={\n              !formModel.activeFrom.isTouched ||\n              formModel.activeFrom.validators.isRequired.isValid\n            }\n          ></TextInput>\n          <ValidationMessages element={formModel.activeFrom} />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"activeTo\">Activated To</label>\n          <TextInput\n            name=\"activeTo\"\n            type=\"date\"\n            value={formModel.activeTo.value}\n            onChangeHandler={handleChange}\n            className=\"col-5\"\n            isValid={\n              !formModel.activeTo.isTouched ||\n              formModel.activeTo.validators.isRequired.isValid\n            }\n          ></TextInput>\n          <ValidationMessages element={formModel.activeTo} />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"activeTo\">Percentage Off</label>\n          <TextInput\n            name=\"percentageOff\"\n            value={formModel.percentageOff.value}\n            onChangeHandler={handleChange}\n            className=\"col-3\"\n            isValid={\n              !formModel.percentageOff.isTouched ||\n              (formModel.percentageOff.validators.isRequired.isValid &&\n                formModel.percentageOff.validators.isDecimal.isValid)\n            }\n          ></TextInput>\n          <ValidationMessages element={formModel.percentageOff} />\n        </div>\n\n        <button\n          type=\"submit\"\n          className={\"btn \" + (formIsValid ? \"btn-primary\" : \"btn-secondary\")}\n          disabled={!formIsValid}\n        >\n          Add\n        </button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default AddPromotion;\n","import React, { useState } from \"react\";\nimport Modal from \"../../hoc/Modal/Modal\";\nimport { service } from \"../../services\";\n\nconst Promotions = ({ promotions, onPromotionDeleted }) => {\n  const [dispalyDeleteModal, setDispalyDeleteModal] = useState(false);\n  const [promotionID, setPromotionID] = useState(null);\n\n  const onDeletePromotion = () => {\n    service.deletePromotion(promotionID).then((_) => {\n      setDispalyDeleteModal(false);\n      onPromotionDeleted();\n    });\n  };\n\n  return (\n    <div>\n      <div className=\"container\">\n        <table className=\"table table-striped\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Label</th>\n              <th scope=\"col\">Product</th>\n              <th scope=\"col\">Percentage Off</th>\n              <th scope=\"col\">Active From</th>\n              <th scope=\"col\">To</th>\n              <th scope=\"col\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {promotions.map((promotion) => {\n              console.log(promotion);\n              return (\n                <tr key={promotion.id}>\n                  <td>{promotion.label}</td>\n                  <td>{promotion.productID}</td>\n                  <td>{promotion.percentageOff}</td>\n                  <td>{promotion.activeFrom}</td>\n                  <td>{promotion.activeTo}</td>\n                  <td>\n                    <i\n                      style={{ cursor: \"pointer\" }}\n                      className=\"fa fa-trash\"\n                      onClick={() => {\n                        setPromotionID(promotion.id);\n                        setDispalyDeleteModal(true);\n                      }}\n                    ></i>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n\n        <Modal\n          displayModal={dispalyDeleteModal}\n          closeModalHandler={() => setDispalyDeleteModal(false)}\n          submitHandler={() => onDeletePromotion()}\n          className=\"w-25\"\n        >\n          Are you sure what are you about to do ?\n        </Modal>\n      </div>\n    </div>\n  );\n};\n\nexport default Promotions;\n","import React, { useEffect, useState } from \"react\";\nimport AddPromotion from \"../../components/AddPromotion/AddPromotion\";\nimport Promotions from \"../../components/Promotions/Promotions\";\nimport Guard from \"../../hoc/Guard/Guard\";\nimport { service } from \"../../services\";\n\nexport const ManagePromotions = () => {\n  const [promotions, setPromotions] = useState(null);\n\n  useEffect(() => {\n    fetchPromotions();\n  }, []);\n\n  const reloadPromotions = () => {\n    fetchPromotions();\n  };\n\n  const fetchPromotions = () => {\n    service.fetchPromotions().then((promotions) => {\n      setPromotions(promotions);\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <h4 className=\"container w-50\">Add a new promotion :</h4>\n      <AddPromotion onPromotionAdded={reloadPromotions} />\n\n      <h4 className=\"container w-50 mt-4\">List of promotions:</h4>\n      {promotions && (\n        <Promotions\n          promotions={promotions}\n          onPromotionDeleted={reloadPromotions}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Guard(ManagePromotions);\n","import React, { useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nexport const ReLogin = () => {\n  useEffect(() => {\n    toast.warn(\"You've been inactive for a long time, please login again\");\n  }, []);\n\n  return <Redirect to=\"/login\"></Redirect>;\n};\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport AddProduct from \"./containers/AddProduct/AddProduct\";\nimport Cart from \"./containers/Cart/Cart\";\nimport Home from \"./containers/Home/Home\";\nimport Login from \"./containers/Login/Login\";\nimport ManageCategories from \"./containers/ManageCategories/ManageCategories\";\nimport ManageProducts from \"./containers/ManageProducts/ManageProducts\";\nimport Orders from \"./containers/Orders/Orders\";\nimport ProductDetails from \"./containers/ProductDetails/ProductDetails\";\nimport Layout from \"./hoc/Layout/Layout\";\nimport { checkAuthenticationState } from \"./store/Login/login-slice\";\nimport { ManagePromotions } from \"./containers/ManagePromotions/ManagePromotions\";\nimport { useIdleTimer } from \"react-idle-timer\";\nimport { authService } from \"./services\";\nimport { ReLogin } from \"./containers/Login/ReLogin\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(checkAuthenticationState());\n  }, [dispatch]);\n\n  const handleOnIdle = (event) => {\n    console.log(\"user is idle\", event);\n    console.log(\"last active\", getLastActiveTime());\n    authService.handleTimeout();\n  };\n\n  const { getLastActiveTime } = useIdleTimer({\n    timeout: 1000 * 60 * 15,\n    onIdle: handleOnIdle,\n    debounce: 500,\n  });\n\n  return (\n    <React.Fragment>\n      <Layout>\n        <Switch>\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/re-login\" component={ReLogin} />\n          <Route path=\"/cart\" component={Cart} />\n          <Route exact path=\"/product/:id\" component={ProductDetails} />\n          <Route path=\"/add-Product\" component={AddProduct} />\n          <Route path=\"/manage-products\" component={ManageProducts} />\n          <Route path=\"/manage-categories\" component={ManageCategories} />\n          <Route path=\"/manage-promotions\" component={ManagePromotions} />\n          <Route path=\"/orders\" component={Orders} />\n          <Route path=\"/\" exact component={Home} />\n        </Switch>\n      </Layout>\n      <ToastContainer />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","export const updateObject = (oldObject, updatedProperties) => {\n  return {\n    ...oldObject,\n    ...updatedProperties,\n  };\n};\n","import * as actions from \"./actions\";\nimport { updateObject } from \"../../services/utils\";\n\nconst initialState = {\n  products: [],\n  isLoading: true,\n  displayCheckoutModal: false,\n  displaySuccessMessage: false,\n};\n\nconst loadProductsStart = (state) => {\n  return updateObject(state, { isLoading: true });\n};\n\nconst loadProductsSuccess = (state, action) => {\n  return updateObject(state, {\n    products: action.products,\n    isLoading: false,\n  });\n};\n\nconst loadProductsFail = (state, action) => {\n  return updateObject(state, { isLoading: false });\n};\n\nconst removeProductFromCart = (state, action) => {\n  let products = state.products.filter((p) => p.id !== action.productID);\n  return updateObject(state, { products: products });\n};\n\nconst checkoutStart = (state, action) => {\n  return updateObject(state);\n};\n\nconst checkoutSuccess = (state, action) => {\n  return updateObject(state, {\n    displaySuccessMessage: true,\n    displayCheckoutModal: false,\n    products: [],\n  });\n};\n\nconst checkoutFail = (state, action) => {\n  return updateObject(state, {\n    displaySuccessMessage: false,\n    displayCheckoutModal: false,\n  });\n};\n\nconst openCheckouModal = (state, action) => {\n  return updateObject(state, {\n    displayCheckoutModal: true,\n  });\n};\n\nconst closeCheckouModal = (state, action) => {\n  return updateObject(state, {\n    displayCheckoutModal: false,\n  });\n};\n\nconst closeSuccessMessage = (state, action) => {\n  return updateObject(state, {\n    displaySuccessMessage: false,\n  });\n};\n\nconst updateQty = (state, action) => {\n  let newState = { ...state };\n\n  let products = newState.products.map((item, index) => {\n    if (item.id !== action.productID) {\n      return item;\n    } else {\n      return { ...item, qty: action.qty };\n    }\n  });\n\n  newState.products = products;\n  return updateObject(state, newState);\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actions.LOAD_PRODUCTS_START:\n      return loadProductsStart(state, action);\n    case actions.LOAD_PRODUCTS_SUCCESS:\n      return loadProductsSuccess(state, action);\n    case actions.LOAD_PRODUCTS_FAIL:\n      return loadProductsFail(state, action);\n\n    case actions.REMOVE_PRODUCT_FROM_CART:\n      return removeProductFromCart(state, action);\n\n    case actions.OPEN_CHECKOUT_MODAL:\n      return openCheckouModal(state, action);\n    case actions.CLOSE_CHECKOUT_MODAL:\n      return closeCheckouModal(state, action);\n\n    case actions.CHECKOUT_START:\n      return checkoutStart(state, action);\n    case actions.CHECKOUT_SUCCESS:\n      return checkoutSuccess(state, action);\n    case actions.CHECKOUT_FAIL:\n      return checkoutFail(state, action);\n\n    case actions.CLOSE_SUCCESS_MESSAGE:\n      return closeSuccessMessage(state, action);\n\n    case actions.UPDTATE_QTY:\n      return updateQty(state, action);\n\n    case actions.RESET_CART_STATE:\n      return { ...initialState };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actions from \"./actions\";\nimport { updateObject } from \"../../services/utils\";\n\nconst initialState = {\n  products: [],\n  loading: false,\n  productID: null,\n  product: null,\n  displayEditModal: false,\n  displayDeleteModalConfirmation: false,\n  categories: null,\n};\n\nconst fetchProductsStart = (state) => {\n  return updateObject(state, { loading: true });\n};\n\nconst fetchProductsSuccess = (state, action) => {\n  return updateObject(state, {\n    products: action.products,\n    loading: false,\n  });\n};\n\nconst fetchProductsFail = (state, action) => {\n  return updateObject(state, { loading: false });\n};\n\nconst updateProductSuccess = (state, action) => {\n  return updateObject(state, { displayEditModal: false });\n};\n\nconst getProductSuccess = (state, action) => {\n  return updateObject(state, { product: action.product });\n};\n\nconst openUpdateProductModal = (state, action) => {\n  return updateObject(state, {\n    displayEditModal: true,\n    productID: action.productID,\n  });\n};\n\nconst closeUpdateProductModal = (state, action) => {\n  return updateObject(state, {\n    displayEditModal: false,\n  });\n};\n\nconst openDeleteProductModal = (state, action) => {\n  return updateObject(state, {\n    displayDeleteModalConfirmation: true,\n    productID: action.productID,\n  });\n};\n\nconst closeDeleteProductModal = (state, action) => {\n  return updateObject(state, {\n    displayDeleteModalConfirmation: false,\n  });\n};\n\nconst deleteProductSuccess = (state, action) => {\n  return updateObject(state, { displayDeleteModalConfirmation: false });\n};\n\nconst fetchCategoriesSuccess = (state, action) => {\n  return updateObject(state, { categories: action.categories });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actions.FETCH_PRODUCTS_START1:\n      return fetchProductsStart(state, action);\n    case actions.FETCH_PRODUCTS_SUCCESS1:\n      return fetchProductsSuccess(state, action);\n    case actions.FETCH_PRODUCTS_FAIL1:\n      return fetchProductsFail(state, action);\n\n    case actions.OPEN_UPDATE_PRODUCT_MODAL:\n      return openUpdateProductModal(state, action);\n    case actions.CLOSE_UPDATE_PRODUCT_MODAL:\n      return closeUpdateProductModal(state, action);\n\n    case actions.GET_PRODUCT_SUCCESS:\n      return getProductSuccess(state, action);\n    case actions.UPDATE_PRODUCT_SUCCESS:\n      return updateProductSuccess(state, action);\n\n    case actions.OPEN_DELETE_PRODUCT_MODAL:\n      return openDeleteProductModal(state, action);\n    case actions.CLOSE_DELETE_PRODUCT_MODAL:\n      return closeDeleteProductModal(state, action);\n    case actions.DELETE_PRODUCT_SUCCESS:\n      return deleteProductSuccess(state, action);\n\n    case actions.FETCH_CATEGORIES_SUCCESS:\n      return fetchCategoriesSuccess(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actions from \"./actions\";\nimport { updateObject } from \"../../services/utils\";\n\nconst initialState = {\n  orders: [],\n  pagesCount: null,\n  orderID: null,\n  loading: false,\n  displayDeleteModalConfirmation: false,\n};\n\nconst fetchOrdersStart = (state) => {\n  return updateObject(state, { loading: true });\n};\n\nconst fetchOrdersSuccess = (state, action) => {\n  return updateObject(state, {\n    orders: action.orders,\n    pagesCount: action.pagesCount,\n    loading: false,\n  });\n};\n\nconst fetchOrdersFail = (state, action) => {\n  return updateObject(state, { loading: false });\n};\n\nconst openDeleteOrderModal = (state, action) => {\n  return updateObject(state, {\n    displayDeleteModalConfirmation: true,\n    orderID: action.orderID,\n  });\n};\n\nconst closeDeleteOrderModal = (state, action) => {\n  return updateObject(state, {\n    displayDeleteModalConfirmation: false,\n  });\n};\n\nconst deleteOrderSuccess = (state, action) => {\n  return updateObject(state, { displayDeleteModalConfirmation: false });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actions.FETCH_ORDERS_START:\n      return fetchOrdersStart(state, action);\n    case actions.FETCH_ORDERS_SUCCESS:\n      return fetchOrdersSuccess(state, action);\n    case actions.FETCH_ORDERS_FAIL:\n      return fetchOrdersFail(state, action);\n\n    case actions.OPEN_DELETE_ORDER_MODAL:\n      return openDeleteOrderModal(state, action);\n    case actions.CLOSE_DELETE_ORDER_MODAL:\n      return closeDeleteOrderModal(state, action);\n    case actions.DELETE_ORDER_SUCCESS:\n      return deleteOrderSuccess(state, action);\n\n    case actions.RESET_ORDERS_STATE:\n      return { ...initialState };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { combineReducers } from \"redux\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"../node_modules/font-awesome/css/font-awesome.min.css\";\nimport App from \"./App\";\nimport \"./index.css\";\n// import authenticationReducers from \"./store/Login/reducers\";\nimport cartReducers from \"./store/Cart/reducers\";\nimport homeReducer from \"./store/Home/home-slice\";\nimport authenticationReducer from \"./store/Login/login-slice\";\n// import homeReducers from \"./store/Home/reducers\";\nimport manageProductsReducers from \"./store/ManageProducts/reducers\";\nimport ordersReducers from \"./store/Orders/reducers\";\n\n// const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  home: homeReducer,\n  manageProducts: manageProductsReducers,\n  login: authenticationReducer,\n  cart: cartReducers,\n  orders: ordersReducers,\n});\n\n// Redux toolkit\nconst store = configureStore({ reducer: rootReducer });\n\n// const store = createStore(\n//   rootReducer,\n//   composeEnhancers(applyMiddleware(thunk))\n// );\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}